!function(c,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports["office-ui-fabric-vue"]=n():c["office-ui-fabric-vue"]=n()}(window,function(){return function(c){var n={};function l(t){if(n[t])return n[t].exports;var I=n[t]={i:t,l:!1,exports:{}};return c[t].call(I.exports,I,I.exports,l),I.l=!0,I.exports}return l.m=c,l.c=n,l.d=function(c,n,t){l.o(c,n)||Object.defineProperty(c,n,{configurable:!1,enumerable:!0,get:t})},l.r=function(c){Object.defineProperty(c,"__esModule",{value:!0})},l.n=function(c){var n=c&&c.__esModule?function(){return c.default}:function(){return c};return l.d(n,"a",n),n},l.o=function(c,n){return Object.prototype.hasOwnProperty.call(c,n)},l.p="/dist/",l(l.s=2)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/vue-style-loader/lib/listToStyles.js\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nfunction listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n// CONCATENATED MODULE: ./node_modules/vue-style-loader/lib/addStylesClient.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return addStylesClient_addStylesClient; });\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\n\n\nvar addStylesClient_hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!addStylesClient_hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar addStylesClient_stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar addStylesClient_head = addStylesClient_hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar addStylesClient_singletonElement = null\nvar addStylesClient_singletonCounter = 0\nvar addStylesClient_isProduction = false\nvar addStylesClient_noop = function () {}\nvar addStylesClient_options = null\nvar addStylesClient_ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar addStylesClient_isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nfunction addStylesClient_addStylesClient (parentId, list, _isProduction, _options) {\n  addStylesClient_isProduction = _isProduction\n\n  addStylesClient_options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesClient_addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = addStylesClient_stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesClient_addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete addStylesClient_stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesClient_addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = addStylesClient_stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStylesClient_addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStylesClient_addStyle(item.parts[j]))\n      }\n      addStylesClient_stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction addStylesClient_createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  addStylesClient_head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStylesClient_addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + addStylesClient_ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (addStylesClient_isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return addStylesClient_noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (addStylesClient_isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = addStylesClient_singletonCounter++\n    styleElement = addStylesClient_singletonElement || (addStylesClient_singletonElement = addStylesClient_createStyleElement())\n    update = addStylesClient_applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = addStylesClient_applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = addStylesClient_createStyleElement()\n    update = addStylesClient_applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar addStylesClient_replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction addStylesClient_applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = addStylesClient_replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction addStylesClient_applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (addStylesClient_options.ssrId) {\n    styleElement.setAttribute(addStylesClient_ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(module,exports){eval('/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn "@media " + item[2] + "{" + content + "}";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join("");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === "string")\n\t\t\tmodules = [[null, modules, ""]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === "number")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = "(" + item[2] + ") and (" + mediaQuery + ")";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || \'\';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === \'function\') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn \'/*# sourceURL=\' + cssMapping.sourceRoot + source + \' */\'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n\t}\n\n\treturn [content].join(\'\\n\');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = \'sourceMappingURL=data:application/json;charset=utf-8;base64,\' + base64;\n\n\treturn \'/*# \' + data + \' */\';\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vZmZpY2UtdWktZmFicmljLXZ1ZS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qcz8yMzUwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsZ0JBQWdCO0FBQ25ELElBQUk7QUFDSjtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsaUJBQWlCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvQkFBb0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELGNBQWM7O0FBRWxFO0FBQ0EiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcblx0dmFyIGxpc3QgPSBbXTtcblxuXHQvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cdGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcblx0XHRyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcblx0XHRcdHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xuXHRcdFx0aWYoaXRlbVsyXSkge1xuXHRcdFx0XHRyZXR1cm4gXCJAbWVkaWEgXCIgKyBpdGVtWzJdICsgXCJ7XCIgKyBjb250ZW50ICsgXCJ9XCI7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXR1cm4gY29udGVudDtcblx0XHRcdH1cblx0XHR9KS5qb2luKFwiXCIpO1xuXHR9O1xuXG5cdC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cdGxpc3QuaSA9IGZ1bmN0aW9uKG1vZHVsZXMsIG1lZGlhUXVlcnkpIHtcblx0XHRpZih0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIilcblx0XHRcdG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcblx0XHR2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXHRcdFx0aWYodHlwZW9mIGlkID09PSBcIm51bWJlclwiKVxuXHRcdFx0XHRhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG5cdFx0fVxuXHRcdGZvcihpID0gMDsgaSA8IG1vZHVsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gbW9kdWxlc1tpXTtcblx0XHRcdC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcblx0XHRcdC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG5cdFx0XHQvLyAgd2hlbiBhIG1vZHVsZSBpcyBpbXBvcnRlZCBtdWx0aXBsZSB0aW1lcyB3aXRoIGRpZmZlcmVudCBtZWRpYSBxdWVyaWVzLlxuXHRcdFx0Ly8gIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcblx0XHRcdGlmKHR5cGVvZiBpdGVtWzBdICE9PSBcIm51bWJlclwiIHx8ICFhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG5cdFx0XHRcdGlmKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcblx0XHRcdFx0XHRpdGVtWzJdID0gbWVkaWFRdWVyeTtcblx0XHRcdFx0fSBlbHNlIGlmKG1lZGlhUXVlcnkpIHtcblx0XHRcdFx0XHRpdGVtWzJdID0gXCIoXCIgKyBpdGVtWzJdICsgXCIpIGFuZCAoXCIgKyBtZWRpYVF1ZXJ5ICsgXCIpXCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0bGlzdC5wdXNoKGl0ZW0pO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblx0cmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7XG5cdHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblx0aWYgKCFjc3NNYXBwaW5nKSB7XG5cdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdH1cblxuXHRpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0dmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG5cdFx0dmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcblx0XHRcdHJldHVybiAnLyojIHNvdXJjZVVSTD0nICsgY3NzTWFwcGluZy5zb3VyY2VSb290ICsgc291cmNlICsgJyAqLydcblx0XHR9KTtcblxuXHRcdHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuXHR9XG5cblx0cmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn1cblxuLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcblx0dmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG5cdHZhciBkYXRhID0gJ3NvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LCcgKyBiYXNlNjQ7XG5cblx0cmV0dXJuICcvKiMgJyArIGRhdGEgKyAnICovJztcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/Breadcrumb/Breadcrumb.vue\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ var Breadcrumb = ({\n  props: {\n    items: {\n      type: Array,\n      required: true\n    },\n    customClasses: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-dc967c88","hasScoped":false,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Breadcrumb/Breadcrumb.vue\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c("div", { staticClass: "ms-Breadcrumb", class: _vm.customClasses }, [\n    _vm._m(0),\n    _vm._v(" "),\n    _c(\n      "ul",\n      { staticClass: "ms-Breadcrumb-list" },\n      _vm._l(_vm.items, function(item, index) {\n        return _c("li", { key: index, staticClass: "ms-Breadcrumb-listItem" }, [\n          _c(\n            "a",\n            {\n              staticClass: "ms-Breadcrumb-itemLink",\n              attrs: { href: item.link }\n            },\n            [_vm._v(_vm._s(item.name))]\n          ),\n          _vm._v(" "),\n          _c("i", {\n            staticClass: "ms-Breadcrumb-chevron ms-Icon ms-Icon--ChevronRight"\n          })\n        ])\n      })\n    )\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c("div", { staticClass: "ms-Breadcrumb-overflow" }, [\n      _c("div", {\n        staticClass: "ms-Breadcrumb-overflowButton ms-Icon ms-Icon--More"\n      }),\n      _vm._v(" "),\n      _c("div", { staticClass: "ms-Breadcrumb-overflowMenu" }, [\n        _c("ul", { staticClass: "ms-ContextualMenu is-open" })\n      ]),\n      _vm._v(" "),\n      _c("i", {\n        staticClass: "ms-Breadcrumb-chevron ms-Icon ms-Icon--ChevronRight"\n      })\n    ])\n  }\n]\nrender._withStripped = true\n\nif (false) {}\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/component-normalizer.js\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  scriptExports = scriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof scriptExports.default\n  if (type === \'object\' || type === \'function\') {\n    scriptExports = scriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === \'function\'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== \'undefined\') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn\'t\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n// CONCATENATED MODULE: ./src/components/Breadcrumb/Breadcrumb.vue\nvar Breadcrumb_disposed = false\nfunction Breadcrumb_injectStyle (context) {\n  if (Breadcrumb_disposed) return\n  __webpack_require__(6)\n}\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar Breadcrumb_vue_template_functional_ = false\n/* styles */\nvar Breadcrumb_vue_styles_ = Breadcrumb_injectStyle\n/* scopeId */\nvar Breadcrumb_vue_scopeId_ = null\n/* moduleIdentifier (server only) */\nvar Breadcrumb_vue_module_identifier_ = null\n\nvar Breadcrumb_Component = normalizeComponent(\n  Breadcrumb,\n  render,\n  staticRenderFns,\n  Breadcrumb_vue_template_functional_,\n  Breadcrumb_vue_styles_,\n  Breadcrumb_vue_scopeId_,\n  Breadcrumb_vue_module_identifier_\n)\nBreadcrumb_Component.options.__file = "src\\\\components\\\\Breadcrumb\\\\Breadcrumb.vue"\n\n/* hot reload */\nif (false) {}\n\n/* harmony default export */ var Breadcrumb_Breadcrumb = (Breadcrumb_Component.exports);\n\n// CONCATENATED MODULE: ./src/components/Breadcrumb/index.js\n\n\n// CONCATENATED MODULE: ./src/Breadcrumb.js\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/Button/BaseButton.vue\n//\n//\n//\n\n/* harmony default export */ var BaseButton = ({});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-8f2077e6","hasScoped":false,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Button/BaseButton.vue\nvar BaseButton_render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c("div")\n}\nvar BaseButton_staticRenderFns = []\nBaseButton_render._withStripped = true\n\nif (false) {}\n// CONCATENATED MODULE: ./src/components/Button/BaseButton.vue\nvar BaseButton_disposed = false\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar BaseButton_vue_template_functional_ = false\n/* styles */\nvar BaseButton_vue_styles_ = null\n/* scopeId */\nvar BaseButton_vue_scopeId_ = null\n/* moduleIdentifier (server only) */\nvar BaseButton_vue_module_identifier_ = null\n\nvar BaseButton_Component = normalizeComponent(\n  BaseButton,\n  BaseButton_render,\n  BaseButton_staticRenderFns,\n  BaseButton_vue_template_functional_,\n  BaseButton_vue_styles_,\n  BaseButton_vue_scopeId_,\n  BaseButton_vue_module_identifier_\n)\nBaseButton_Component.options.__file = "src\\\\components\\\\Button\\\\BaseButton.vue"\n\n/* hot reload */\nif (false) {}\n\n/* harmony default export */ var Button_BaseButton = (BaseButton_Component.exports);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/Button/DefaultButton/DefaultButton.vue\n//\n//\n//\n//\n\n/* harmony default export */ var DefaultButton = ({});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-0604b8a0","hasScoped":false,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Button/DefaultButton/DefaultButton.vue\nvar DefaultButton_render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c("div")\n}\nvar DefaultButton_staticRenderFns = []\nDefaultButton_render._withStripped = true\n\nif (false) {}\n// CONCATENATED MODULE: ./src/components/Button/DefaultButton/DefaultButton.vue\nvar DefaultButton_disposed = false\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar DefaultButton_vue_template_functional_ = false\n/* styles */\nvar DefaultButton_vue_styles_ = null\n/* scopeId */\nvar DefaultButton_vue_scopeId_ = null\n/* moduleIdentifier (server only) */\nvar DefaultButton_vue_module_identifier_ = null\n\nvar DefaultButton_Component = normalizeComponent(\n  DefaultButton,\n  DefaultButton_render,\n  DefaultButton_staticRenderFns,\n  DefaultButton_vue_template_functional_,\n  DefaultButton_vue_styles_,\n  DefaultButton_vue_scopeId_,\n  DefaultButton_vue_module_identifier_\n)\nDefaultButton_Component.options.__file = "src\\\\components\\\\Button\\\\DefaultButton\\\\DefaultButton.vue"\n\n/* hot reload */\nif (false) {}\n\n/* harmony default export */ var DefaultButton_DefaultButton = (DefaultButton_Component.exports);\n\n// CONCATENATED MODULE: ./src/components/Button/index.js\n\n// import Button from \'./Button.vue\'\n// import ActionButton from \'./ActionButton/ActionButton.vue\'\n// import BarButton from \'./CommandBarButton/CommandBarButton.vue\'\n// import CommandButton from \'./CommandButton/CommandButton.vue\'\n// import CompoundButton from \'./CompoundButton/CompoundButton.vue\'\n\n// import PrimaryButton from \'./PrimaryButton/PrimaryButton.vue\'\n// import IconButton from \'./IconButton/IconButton.vue\'\n\n\n// CONCATENATED MODULE: ./src/Button.js\n\n// CONCATENATED MODULE: ./src/components/Persona/initials.js\nvar COLOR_SWATCHES_LOOKUP = [\'lightGreen\', \'lightBlue\', \'lightPink\', \'green\', \'darkGreen\', \'pink\', \'magenta\', \'purple\', \'black\', \'teal\', \'blue\', \'darkBlue\', \'orange\', \'darkRed\'];\n\nvar COLOR_SWATCHES_NUM_ENTRIES = COLOR_SWATCHES_LOOKUP.length;\n\nfunction getInitialsColorFromName(displayName) {\n  var color = \'blue\';\n  if (!displayName) {\n    return color;\n  }\n\n  var hashCode = 0;\n  for (var iLen = displayName.length - 1; iLen >= 0; iLen--) {\n    var ch = displayName.charCodeAt(iLen);\n    var shift = iLen % 8;\n    // tslint:disable-next-line:no-bitwise\n    hashCode ^= (ch << shift) + (ch >> 8 - shift);\n  }\n\n  color = COLOR_SWATCHES_LOOKUP[hashCode % COLOR_SWATCHES_NUM_ENTRIES];\n\n  return color;\n}\n\nfunction personaInitialsColorToHexCode(personaInitialsColor) {\n  switch (personaInitialsColor) {\n    case \'lightBlue\':\n      return \'#6BA5E7\';\n    case \'blue\':\n      return \'#2D89EF\';\n    case \'darkBlue\':\n      return \'#2B5797\';\n    case \'teal\':\n      return \'#00ABA9\';\n    case \'lightGreen\':\n      return \'#99B433\';\n    case \'green\':\n      return \'#00A300\';\n    case \'darkGreen\':\n      return \'#1E7145\';\n    case \'lightPink\':\n      return \'#E773BD\';\n    case \'pink\':\n      return \'#FF0097\';\n    case \'magenta\':\n      return \' #7E3878\';\n    case \'purple\':\n      return \'#603CBA\';\n    case \'black\':\n      return \'#1D1D1D\';\n    case \'orange\':\n      return \'#DA532C\';\n    case \'red\':\n      return \'#EE1111\';\n    case \'darkRed\':\n      return \'#B91D47\';\n    case \'transparent\':\n      return \'transparent\';\n  }\n}\n\nfunction initialsColorPropToColorCode(props) {\n  var primaryText = props.primaryText;\n  var initialsColor = props.initialsColor;\n\n  var initialsColorCode = void 0;\n  if (typeof initialsColor === \'string\') {\n    initialsColorCode = initialsColor;\n  } else {\n    initialsColor = initialsColor !== undefined ? initialsColor : getInitialsColorFromName(primaryText);\n    initialsColorCode = personaInitialsColorToHexCode(initialsColor);\n  }\n\n  return initialsColorCode;\n}\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/Persona/PersonaInitials.vue\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var PersonaInitials = ({\n  props: {\n    name: {\n      type: String,\n      required: true\n    }\n  },\n  computed: {\n    initialsColor: function initialsColor() {\n      return initialsColorPropToColorCode({\n        primaryText: this.name\n      });\n    },\n    initials: function initials() {\n      var name = this.name;\n      var split = name.split(\' \');\n      var first = split[0];\n      var last = split[split.length - 1];\n      if (split.length > 1) {\n        return first[0] + last[0];\n      }\n      return first[0];\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-1831486a","hasScoped":false,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Persona/PersonaInitials.vue\nvar PersonaInitials_render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "div",\n    {\n      staticClass: "ms-Persona-initials",\n      style: { "background-color": _vm.initialsColor }\n    },\n    [_c("span", [_vm._v(_vm._s(_vm.initials))])]\n  )\n}\nvar PersonaInitials_staticRenderFns = []\nPersonaInitials_render._withStripped = true\n\nif (false) {}\n// CONCATENATED MODULE: ./src/components/Persona/PersonaInitials.vue\nvar PersonaInitials_disposed = false\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar PersonaInitials_vue_template_functional_ = false\n/* styles */\nvar PersonaInitials_vue_styles_ = null\n/* scopeId */\nvar PersonaInitials_vue_scopeId_ = null\n/* moduleIdentifier (server only) */\nvar PersonaInitials_vue_module_identifier_ = null\n\nvar PersonaInitials_Component = normalizeComponent(\n  PersonaInitials,\n  PersonaInitials_render,\n  PersonaInitials_staticRenderFns,\n  PersonaInitials_vue_template_functional_,\n  PersonaInitials_vue_styles_,\n  PersonaInitials_vue_scopeId_,\n  PersonaInitials_vue_module_identifier_\n)\nPersonaInitials_Component.options.__file = "src\\\\components\\\\Persona\\\\PersonaInitials.vue"\n\n/* hot reload */\nif (false) {}\n\n/* harmony default export */ var Persona_PersonaInitials = (PersonaInitials_Component.exports);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/components/Persona/Persona.vue\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\nvar Persona_size72 = 14;\n\n/* harmony default export */ var Persona = ({\n  components: { PersonaInitials: Persona_PersonaInitials },\n  props: {\n    primaryText: {\n      type: String,\n      default: \'\'\n    },\n    secondaryText: {\n      type: String,\n      default: \'\'\n    },\n    tertiaryText: {\n      type: String,\n      default: \'\'\n    },\n    size: {\n      type: Number,\n      default: Persona_size72\n    },\n    presence: {\n      type: String,\n      default: \'\'\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-d737ed08","hasScoped":true,"optionsId":"0","buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Persona/Persona.vue\nvar Persona_render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c("div", { staticClass: "ms-Persona", attrs: { size: _vm.size } }, [\n    _c("div", { staticClass: "ms-Persona-coin" }, [\n      _vm.size === 9\n        ? _c("i", {\n            staticClass: "ms-Icon ms-Icon--Contact",\n            attrs: { "aria-hidden": "true" }\n          })\n        : _c(\n            "div",\n            { staticClass: "ms-Persona-imageArea" },\n            [\n              !_vm.person.avatar\n                ? _c("persona-initials", { attrs: { name: _vm.person.name } })\n                : _c("div", { staticClass: "ms-Image ms-Persona-image" }, [\n                    _c("img", {\n                      staticClass: "ms-Image-image",\n                      attrs: { src: _vm.person.avatar, alt: "" }\n                    })\n                  ])\n            ],\n            1\n          )\n    ]),\n    _vm._v(" "),\n    _c(\n      "div",\n      { staticClass: "ms-Persona-details" },\n      [\n        _c("div", { staticClass: "ms-Persona-primaryText" }, [\n          _c("span", { attrs: { title: _vm.person.name } }, [\n            _vm._v(_vm._s(_vm.person.name))\n          ])\n        ]),\n        _vm._v(" "),\n        _vm._t("default")\n      ],\n      2\n    )\n  ])\n}\nvar Persona_staticRenderFns = []\nPersona_render._withStripped = true\n\nif (false) {}\n// CONCATENATED MODULE: ./src/components/Persona/Persona.vue\nvar Persona_disposed = false\nfunction Persona_injectStyle (context) {\n  if (Persona_disposed) return\n  __webpack_require__(4)\n}\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar Persona_vue_template_functional_ = false\n/* styles */\nvar Persona_vue_styles_ = Persona_injectStyle\n/* scopeId */\nvar Persona_vue_scopeId_ = "data-v-d737ed08"\n/* moduleIdentifier (server only) */\nvar Persona_vue_module_identifier_ = null\n\nvar Persona_Component = normalizeComponent(\n  Persona,\n  Persona_render,\n  Persona_staticRenderFns,\n  Persona_vue_template_functional_,\n  Persona_vue_styles_,\n  Persona_vue_scopeId_,\n  Persona_vue_module_identifier_\n)\nPersona_Component.options.__file = "src\\\\components\\\\Persona\\\\Persona.vue"\n\n/* hot reload */\nif (false) {}\n\n/* harmony default export */ var Persona_Persona = (Persona_Component.exports);\n\n// CONCATENATED MODULE: ./src/components/Persona/index.js\n\n\n\n// CONCATENATED MODULE: ./src/Persona.js\n\n// CONCATENATED MODULE: ./src/index.js\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Breadcrumb", function() { return Breadcrumb_Breadcrumb; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "BaseButton", function() { return Button_BaseButton; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "DefaultButton", function() { return DefaultButton_DefaultButton; });\n/* concated harmony reexport */__webpack_require__.d(__webpack_exports__, "Persona", function() { return Persona_Persona; });\n\n\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vZmZpY2UtdWktZmFicmljLXZ1ZS9zcmMvY29tcG9uZW50cy9CcmVhZGNydW1iL0JyZWFkY3J1bWIudnVlPzFmNTYiLCJ3ZWJwYWNrOi8vb2ZmaWNlLXVpLWZhYnJpYy12dWUvLi9zcmMvY29tcG9uZW50cy9CcmVhZGNydW1iL0JyZWFkY3J1bWIudnVlP2VhZmQiLCJ3ZWJwYWNrOi8vb2ZmaWNlLXVpLWZhYnJpYy12dWUvLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnQtbm9ybWFsaXplci5qcz8yNDU1Iiwid2VicGFjazovL29mZmljZS11aS1mYWJyaWMtdnVlLy4vc3JjL2NvbXBvbmVudHMvQnJlYWRjcnVtYi9CcmVhZGNydW1iLnZ1ZT8wNTQyIiwid2VicGFjazovL29mZmljZS11aS1mYWJyaWMtdnVlLy4vc3JjL2NvbXBvbmVudHMvQnJlYWRjcnVtYi9pbmRleC5qcz9kODE5Iiwid2VicGFjazovL29mZmljZS11aS1mYWJyaWMtdnVlL3NyYy9jb21wb25lbnRzL0J1dHRvbi9CYXNlQnV0dG9uLnZ1ZT9mNDIwIiwid2VicGFjazovL29mZmljZS11aS1mYWJyaWMtdnVlLy4vc3JjL2NvbXBvbmVudHMvQnV0dG9uL0Jhc2VCdXR0b24udnVlPzMzYmUiLCJ3ZWJwYWNrOi8vb2ZmaWNlLXVpLWZhYnJpYy12dWUvLi9zcmMvY29tcG9uZW50cy9CdXR0b24vQmFzZUJ1dHRvbi52dWU/Y2EzZiIsIndlYnBhY2s6Ly9vZmZpY2UtdWktZmFicmljLXZ1ZS9zcmMvY29tcG9uZW50cy9CdXR0b24vRGVmYXVsdEJ1dHRvbi9EZWZhdWx0QnV0dG9uLnZ1ZT8xNjc5Iiwid2VicGFjazovL29mZmljZS11aS1mYWJyaWMtdnVlLy4vc3JjL2NvbXBvbmVudHMvQnV0dG9uL0RlZmF1bHRCdXR0b24vRGVmYXVsdEJ1dHRvbi52dWU/ZWQyNyIsIndlYnBhY2s6Ly9vZmZpY2UtdWktZmFicmljLXZ1ZS8uL3NyYy9jb21wb25lbnRzL0J1dHRvbi9EZWZhdWx0QnV0dG9uL0RlZmF1bHRCdXR0b24udnVlPzU1NmMiLCJ3ZWJwYWNrOi8vb2ZmaWNlLXVpLWZhYnJpYy12dWUvLi9zcmMvY29tcG9uZW50cy9CdXR0b24vaW5kZXguanM/YzMwZCIsIndlYnBhY2s6Ly9vZmZpY2UtdWktZmFicmljLXZ1ZS8uL3NyYy9jb21wb25lbnRzL1BlcnNvbmEvaW5pdGlhbHMuanM/M2Q5YiIsIndlYnBhY2s6Ly9vZmZpY2UtdWktZmFicmljLXZ1ZS9zcmMvY29tcG9uZW50cy9QZXJzb25hL1BlcnNvbmFJbml0aWFscy52dWU/YzU3OSIsIndlYnBhY2s6Ly9vZmZpY2UtdWktZmFicmljLXZ1ZS8uL3NyYy9jb21wb25lbnRzL1BlcnNvbmEvUGVyc29uYUluaXRpYWxzLnZ1ZT82MDVjIiwid2VicGFjazovL29mZmljZS11aS1mYWJyaWMtdnVlLy4vc3JjL2NvbXBvbmVudHMvUGVyc29uYS9QZXJzb25hSW5pdGlhbHMudnVlP2RjZDgiLCJ3ZWJwYWNrOi8vb2ZmaWNlLXVpLWZhYnJpYy12dWUvc3JjL2NvbXBvbmVudHMvUGVyc29uYS9QZXJzb25hLnZ1ZT9hMTlhIiwid2VicGFjazovL29mZmljZS11aS1mYWJyaWMtdnVlLy4vc3JjL2NvbXBvbmVudHMvUGVyc29uYS9QZXJzb25hLnZ1ZT9mMDUyIiwid2VicGFjazovL29mZmljZS11aS1mYWJyaWMtdnVlLy4vc3JjL2NvbXBvbmVudHMvUGVyc29uYS9QZXJzb25hLnZ1ZT84NDg5Iiwid2VicGFjazovL29mZmljZS11aS1mYWJyaWMtdnVlLy4vc3JjL2NvbXBvbmVudHMvUGVyc29uYS9pbmRleC5qcz80NTYyIiwid2VicGFjazovL29mZmljZS11aS1mYWJyaWMtdnVlLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwibmFtZXMiOlsiQ09MT1JfU1dBVENIRVNfTE9PS1VQIiwiQ09MT1JfU1dBVENIRVNfTlVNX0VOVFJJRVMiLCJsZW5ndGgiLCJnZXRJbml0aWFsc0NvbG9yRnJvbU5hbWUiLCJkaXNwbGF5TmFtZSIsImNvbG9yIiwiaGFzaENvZGUiLCJpTGVuIiwiY2giLCJjaGFyQ29kZUF0Iiwic2hpZnQiLCJwZXJzb25hSW5pdGlhbHNDb2xvclRvSGV4Q29kZSIsInBlcnNvbmFJbml0aWFsc0NvbG9yIiwiaW5pdGlhbHNDb2xvclByb3BUb0NvbG9yQ29kZSIsInByb3BzIiwicHJpbWFyeVRleHQiLCJpbml0aWFsc0NvbG9yIiwiaW5pdGlhbHNDb2xvckNvZGUiLCJ1bmRlZmluZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBb0JBOzs7WUFJQTtnQkFFQTtBQUhBOztZQUtBOztlQUdBOztBQUpBO0FBTEE7QUFEQSxHOztBQ3JCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix5REFBeUQ7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLG9DQUFvQztBQUMzQztBQUNBLHlCQUF5QixvREFBb0Q7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix3Q0FBd0M7QUFDOUQ7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLGlCQUFpQiw0Q0FBNEM7QUFDN0Qsa0JBQWtCLDJDQUEyQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNRO0FBQ1IsYTs7QUNuREE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx5QkFB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Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsYUFhQzs7QUFFRDs7O0FDOUNBOzs7Ozs7Ozs7OztBQ0NBO0FBQ0EiLCJmaWxlIjoiMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIjx0ZW1wbGF0ZT5cclxuPGRpdiBjbGFzcz1cIm1zLUJyZWFkY3J1bWJcIiA6Y2xhc3M9XCJjdXN0b21DbGFzc2VzXCI+XHJcbiAgPGRpdiBjbGFzcz1cIm1zLUJyZWFkY3J1bWItb3ZlcmZsb3dcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJtcy1CcmVhZGNydW1iLW92ZXJmbG93QnV0dG9uIG1zLUljb24gbXMtSWNvbi0tTW9yZVwiPjwvZGl2PlxyXG4gICAgPGRpdiBjbGFzcz1cIm1zLUJyZWFkY3J1bWItb3ZlcmZsb3dNZW51XCI+XHJcbiAgICAgIDx1bCBjbGFzcz1cIm1zLUNvbnRleHR1YWxNZW51IGlzLW9wZW5cIj48L3VsPlxyXG4gICAgPC9kaXY+XHJcbiAgICA8aSBjbGFzcz1cIm1zLUJyZWFkY3J1bWItY2hldnJvbiBtcy1JY29uIG1zLUljb24tLUNoZXZyb25SaWdodFwiPjwvaT5cclxuICA8L2Rpdj5cclxuICA8dWwgY2xhc3M9XCJtcy1CcmVhZGNydW1iLWxpc3RcIj5cclxuICAgIDxsaSBjbGFzcz1cIm1zLUJyZWFkY3J1bWItbGlzdEl0ZW1cIiB2LWZvcj1cIihpdGVtLCBpbmRleCkgaW4gaXRlbXNcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6a2V5PVwiaW5kZXhcIj5cclxuICAgICAgPGEgY2xhc3M9XCJtcy1CcmVhZGNydW1iLWl0ZW1MaW5rXCIgOmhyZWY9XCJpdGVtLmxpbmtcIj57eyBpdGVtLm5hbWUgfX08L2E+XHJcbiAgICAgIDxpIGNsYXNzPVwibXMtQnJlYWRjcnVtYi1jaGV2cm9uIG1zLUljb24gbXMtSWNvbi0tQ2hldnJvblJpZ2h0XCI+PC9pPlxyXG4gICAgPC9saT5cclxuICA8L3VsPlxyXG48L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBwcm9wczoge1xyXG4gICAgaXRlbXM6IHtcclxuICAgICAgdHlwZTogQXJyYXksXHJcbiAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgICB9LFxyXG4gICAgY3VzdG9tQ2xhc3Nlczoge1xyXG4gICAgICB0eXBlOiBBcnJheSxcclxuICAgICAgZGVmYXVsdDogKCkgPT4gW11cclxuICAgIH1cclxuICB9XHJcbn1cclxuPC9zY3JpcHQ+XHJcblxyXG48c3R5bGUgbGFuZz1cInNjc3NcIj5cclxuLy8gJEJyZWFkY3J1bWItb3ZlcmZsb3dCdXR0b25Db2xvcjogJG1zLWNvbG9yLXRoZW1lUHJpbWFyeTtcclxuJEJyZWFkY3J1bWItb3ZlcmZsb3dCdXR0b25TaXplOiAxNnB4O1xyXG4vLyAkQnJlYWRjcnVtYi1idXR0b25Ib3ZlckNvbG9yOiAkbXMtY29sb3ItdGhlbWVEYXJrO1xyXG4kQnJlYWRjcnVtYi1pdGVtTWF4V2lkdGg6IDE2MHB4O1xyXG4kQnJlYWRjcnVtYi1pdGVtTWF4V2lkdGgtc206IDExNnB4O1xyXG4kQnJlYWRjcnVtYi1jaGV2cm9uLXNtOiA4cHg7XHJcblxyXG4ubXMtQnJlYWRjcnVtYi1yb290IHtcclxuICBtYXJnaW46IDIzcHggMCAxcHg7XHJcbn1cclxuXHJcbi5tcy1CcmVhZGNydW1iLWxpc3Qge1xyXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgcGFkZGluZzogMDtcclxuICBtYXJnaW46IDA7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogc3RyZXRjaDtcclxufVxyXG5cclxuLy8gLm1zLUJyZWFkY3J1bWItY2hldnJvbiB7XHJcbi8vICAgLy8gZm9udC1zaXplOiAkbXMtZm9udC1zaXplLXM7XHJcbi8vICAgLy8gY29sb3I6ICRtcy1jb2xvci1uZXV0cmFsU2Vjb25kYXJ5O1xyXG4vLyB9XHJcblxyXG4ubXMtQnJlYWRjcnVtYi1saXN0SXRlbSB7XHJcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gIG1hcmdpbjogMDtcclxuICBwYWRkaW5nOiAwO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgJjpsYXN0LW9mLXR5cGUge1xyXG4gICAgLmNoZXZyb24ge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuXHJcbiAgLm1zLUJyZWFkY3J1bWItaXRlbSxcclxuICAubXMtQnJlYWRjcnVtYi1pdGVtTGluayB7XHJcbiAgICAvLyBAaW5jbHVkZSBtcy1mb250LXhsO1xyXG4gICAgLy8gY29sb3I6ICRtcy1jb2xvci1uZXV0cmFsUHJpbWFyeTtcclxuICAgIHBhZGRpbmc6IDAgOHB4O1xyXG4gICAgbWF4LXdpZHRoOiAkQnJlYWRjcnVtYi1pdGVtTWF4V2lkdGg7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIH1cclxufVxyXG5cclxuLm1zLUJyZWFkY3J1bWItb3ZlcmZsb3cge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5tcy1CcmVhZGNydW1iLW92ZXJmbG93QnV0dG9uIHtcclxuICAvLyBmb250LXNpemU6ICRCcmVhZGNydW1iLW92ZXJmbG93QnV0dG9uU2l6ZTtcclxuICBoZWlnaHQ6IDEwMCU7IC8vIG92ZXJyaWRlIGJ1dHRvbiBoZWlnaHRcclxuICAmOmhvdmVyIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIC8vIGJhY2tncm91bmQtY29sb3I6ICRtcy1jb2xvci1uZXV0cmFsTGlnaHRlcjtcclxuICB9XHJcbn1cclxuXHJcbi5tcy1CcmVhZGNydW1iLWl0ZW0ge1xyXG4gICY6aG92ZXIge1xyXG4gICAgY3Vyc29yOiBkZWZhdWx0O1xyXG4gIH1cclxufVxyXG5cclxuXHJcbi5tcy1CcmVhZGNydW1iLXJvb3QgLm1zLUJyZWFkY3J1bWItaXRlbUxpbmsge1xyXG4gICY6aG92ZXIge1xyXG4gICAgLy8gYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGVkSG92ZXJCYWNrZ3JvdW5kQ29sb3I7XHJcbiAgICBjb2xvcjogaW5pdGlhbDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcblxyXG4gICY6Zm9jdXMge1xyXG4gICAgLy8gY29sb3I6ICRtcy1jb2xvci1uZXV0cmFsRGFyaztcclxuICB9XHJcblxyXG4gICY6YWN0aXZlIHtcclxuICAgIG91dGxpbmU6IHRyYW5zcGFyZW50O1xyXG4gICAgLy8gYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGVkQWN0aXZlQmFja2dyb3VuZENvbG9yO1xyXG4gICAgLy8gY29sb3I6ICRzZWxlY3RlZEFjdGl2ZUZvcmVncm91bmRDb2xvcjtcclxuICB9XHJcbn1cclxuXHJcblxyXG4ubXMtQnJlYWRjcnVtYi1pdGVtTGluayxcclxuLm1zLUJyZWFkY3J1bWItb3ZlcmZsb3dCdXR0b24ge1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICBvdXRsaW5lOiB0cmFuc3BhcmVudDtcclxufVxyXG5cclxuJHVoZi1zY3JlZW4tbWF4LW1vYmlsZTogMTkyMHB4O1xyXG4kbXMtc2NyZWVuLW1heC1zbTogODAwcHg7XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkdWhmLXNjcmVlbi1tYXgtbW9iaWxlKSB7XHJcbiAgLy8gbWFyZ2luOiAxMXB4IDAgMXB4O1xyXG5cclxuICAubXMtQnJlYWRjcnVtYi1saXN0SXRlbSAubXMtQnJlYWRjcnVtYi1pdGVtTGluayB7XHJcbiAgICAvLyBmb250LXNpemU6ICRtcy1mb250LXNpemUtbDtcclxuICB9XHJcblxyXG4gIC5tcy1CcmVhZGNydW1iLWNoZXZyb24ge1xyXG4gICAgLy8gZm9udC1zaXplOiAkbXMtZm9udC1zaXplLW1pO1xyXG4gIH1cclxuXHJcbiAgLm1zLUJyZWFkY3J1bWItb3ZlcmZsb3dCdXR0b24ge1xyXG4gICAgLy8gZm9udC1zaXplOiAkbXMtZm9udC1zaXplLW0tcGx1cztcclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICRtcy1zY3JlZW4tbWF4LXNtKSB7XHJcbiAgLm1zLUJyZWFkY3J1bWItbGlzdEl0ZW0gLm1zLUJyZWFkY3J1bWItaXRlbUxpbmsge1xyXG4gICAgLy8gZm9udC1zaXplOiAkbXMtZm9udC1zaXplLW07XHJcbiAgICBtYXgtd2lkdGg6ICRCcmVhZGNydW1iLWl0ZW1NYXhXaWR0aC1zbTtcclxuICB9XHJcblxyXG4gIC5tcy1CcmVhZGNydW1iLWNoZXZyb24ge1xyXG4gICAgZm9udC1zaXplOiAkQnJlYWRjcnVtYi1jaGV2cm9uLXNtO1xyXG4gIH1cclxuXHJcbiAgLm1zLUJyZWFkY3J1bWItb3ZlcmZsb3dCdXR0b24ge1xyXG4gICAgcGFkZGluZzogNHB4IDZweDtcclxuICB9XHJcbn1cclxuPC9zdHlsZT5cclxuIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcIm1zLUJyZWFkY3J1bWJcIiwgY2xhc3M6IF92bS5jdXN0b21DbGFzc2VzIH0sIFtcbiAgICBfdm0uX20oMCksXG4gICAgX3ZtLl92KFwiIFwiKSxcbiAgICBfYyhcbiAgICAgIFwidWxcIixcbiAgICAgIHsgc3RhdGljQ2xhc3M6IFwibXMtQnJlYWRjcnVtYi1saXN0XCIgfSxcbiAgICAgIF92bS5fbChfdm0uaXRlbXMsIGZ1bmN0aW9uKGl0ZW0sIGluZGV4KSB7XG4gICAgICAgIHJldHVybiBfYyhcImxpXCIsIHsga2V5OiBpbmRleCwgc3RhdGljQ2xhc3M6IFwibXMtQnJlYWRjcnVtYi1saXN0SXRlbVwiIH0sIFtcbiAgICAgICAgICBfYyhcbiAgICAgICAgICAgIFwiYVwiLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJtcy1CcmVhZGNydW1iLWl0ZW1MaW5rXCIsXG4gICAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6IGl0ZW0ubGluayB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgW192bS5fdihfdm0uX3MoaXRlbS5uYW1lKSldXG4gICAgICAgICAgKSxcbiAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgIF9jKFwiaVwiLCB7XG4gICAgICAgICAgICBzdGF0aWNDbGFzczogXCJtcy1CcmVhZGNydW1iLWNoZXZyb24gbXMtSWNvbiBtcy1JY29uLS1DaGV2cm9uUmlnaHRcIlxuICAgICAgICAgIH0pXG4gICAgICAgIF0pXG4gICAgICB9KVxuICAgIClcbiAgXSlcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXG4gIGZ1bmN0aW9uKCkge1xuICAgIHZhciBfdm0gPSB0aGlzXG4gICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gICAgcmV0dXJuIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwibXMtQnJlYWRjcnVtYi1vdmVyZmxvd1wiIH0sIFtcbiAgICAgIF9jKFwiZGl2XCIsIHtcbiAgICAgICAgc3RhdGljQ2xhc3M6IFwibXMtQnJlYWRjcnVtYi1vdmVyZmxvd0J1dHRvbiBtcy1JY29uIG1zLUljb24tLU1vcmVcIlxuICAgICAgfSksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJtcy1CcmVhZGNydW1iLW92ZXJmbG93TWVudVwiIH0sIFtcbiAgICAgICAgX2MoXCJ1bFwiLCB7IHN0YXRpY0NsYXNzOiBcIm1zLUNvbnRleHR1YWxNZW51IGlzLW9wZW5cIiB9KVxuICAgICAgXSksXG4gICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgX2MoXCJpXCIsIHtcbiAgICAgICAgc3RhdGljQ2xhc3M6IFwibXMtQnJlYWRjcnVtYi1jaGV2cm9uIG1zLUljb24gbXMtSWNvbi0tQ2hldnJvblJpZ2h0XCJcbiAgICAgIH0pXG4gICAgXSlcbiAgfVxuXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9XG5pZiAobW9kdWxlLmhvdCkge1xuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmIChtb2R1bGUuaG90LmRhdGEpIHtcbiAgICByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpICAgICAgLnJlcmVuZGVyKFwiZGF0YS12LWRjOTY3Yzg4XCIsIHsgcmVuZGVyOiByZW5kZXIsIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zIH0pXG4gIH1cbn0iLCIvKiBnbG9iYWxzIF9fVlVFX1NTUl9DT05URVhUX18gKi9cblxuLy8gSU1QT1JUQU5UOiBEbyBOT1QgdXNlIEVTMjAxNSBmZWF0dXJlcyBpbiB0aGlzIGZpbGUgKGV4Y2VwdCBmb3IgbW9kdWxlcykuXG4vLyBUaGlzIG1vZHVsZSBpcyBhIHJ1bnRpbWUgdXRpbGl0eSBmb3IgY2xlYW5lciBjb21wb25lbnQgbW9kdWxlIG91dHB1dCBhbmQgd2lsbFxuLy8gYmUgaW5jbHVkZWQgaW4gdGhlIGZpbmFsIHdlYnBhY2sgdXNlciBidW5kbGUuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vcm1hbGl6ZUNvbXBvbmVudCAoXG4gIHNjcmlwdEV4cG9ydHMsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmdW5jdGlvbmFsVGVtcGxhdGUsXG4gIGluamVjdFN0eWxlcyxcbiAgc2NvcGVJZCxcbiAgbW9kdWxlSWRlbnRpZmllciwgLyogc2VydmVyIG9ubHkgKi9cbiAgc2hhZG93TW9kZSAvKiB2dWUtY2xpIG9ubHkgKi9cbikge1xuICBzY3JpcHRFeHBvcnRzID0gc2NyaXB0RXhwb3J0cyB8fCB7fVxuXG4gIC8vIEVTNiBtb2R1bGVzIGludGVyb3BcbiAgdmFyIHR5cGUgPSB0eXBlb2Ygc2NyaXB0RXhwb3J0cy5kZWZhdWx0XG4gIGlmICh0eXBlID09PSAnb2JqZWN0JyB8fCB0eXBlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgc2NyaXB0RXhwb3J0cyA9IHNjcmlwdEV4cG9ydHMuZGVmYXVsdFxuICB9XG5cbiAgLy8gVnVlLmV4dGVuZCBjb25zdHJ1Y3RvciBleHBvcnQgaW50ZXJvcFxuICB2YXIgb3B0aW9ucyA9IHR5cGVvZiBzY3JpcHRFeHBvcnRzID09PSAnZnVuY3Rpb24nXG4gICAgPyBzY3JpcHRFeHBvcnRzLm9wdGlvbnNcbiAgICA6IHNjcmlwdEV4cG9ydHNcblxuICAvLyByZW5kZXIgZnVuY3Rpb25zXG4gIGlmIChyZW5kZXIpIHtcbiAgICBvcHRpb25zLnJlbmRlciA9IHJlbmRlclxuICAgIG9wdGlvbnMuc3RhdGljUmVuZGVyRm5zID0gc3RhdGljUmVuZGVyRm5zXG4gICAgb3B0aW9ucy5fY29tcGlsZWQgPSB0cnVlXG4gIH1cblxuICAvLyBmdW5jdGlvbmFsIHRlbXBsYXRlXG4gIGlmIChmdW5jdGlvbmFsVGVtcGxhdGUpIHtcbiAgICBvcHRpb25zLmZ1bmN0aW9uYWwgPSB0cnVlXG4gIH1cblxuICAvLyBzY29wZWRJZFxuICBpZiAoc2NvcGVJZCkge1xuICAgIG9wdGlvbnMuX3Njb3BlSWQgPSBzY29wZUlkXG4gIH1cblxuICB2YXIgaG9va1xuICBpZiAobW9kdWxlSWRlbnRpZmllcikgeyAvLyBzZXJ2ZXIgYnVpbGRcbiAgICBob29rID0gZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgIC8vIDIuMyBpbmplY3Rpb25cbiAgICAgIGNvbnRleHQgPVxuICAgICAgICBjb250ZXh0IHx8IC8vIGNhY2hlZCBjYWxsXG4gICAgICAgICh0aGlzLiR2bm9kZSAmJiB0aGlzLiR2bm9kZS5zc3JDb250ZXh0KSB8fCAvLyBzdGF0ZWZ1bFxuICAgICAgICAodGhpcy5wYXJlbnQgJiYgdGhpcy5wYXJlbnQuJHZub2RlICYmIHRoaXMucGFyZW50LiR2bm9kZS5zc3JDb250ZXh0KSAvLyBmdW5jdGlvbmFsXG4gICAgICAvLyAyLjIgd2l0aCBydW5Jbk5ld0NvbnRleHQ6IHRydWVcbiAgICAgIGlmICghY29udGV4dCAmJiB0eXBlb2YgX19WVUVfU1NSX0NPTlRFWFRfXyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29udGV4dCA9IF9fVlVFX1NTUl9DT05URVhUX19cbiAgICAgIH1cbiAgICAgIC8vIGluamVjdCBjb21wb25lbnQgc3R5bGVzXG4gICAgICBpZiAoaW5qZWN0U3R5bGVzKSB7XG4gICAgICAgIGluamVjdFN0eWxlcy5jYWxsKHRoaXMsIGNvbnRleHQpXG4gICAgICB9XG4gICAgICAvLyByZWdpc3RlciBjb21wb25lbnQgbW9kdWxlIGlkZW50aWZpZXIgZm9yIGFzeW5jIGNodW5rIGluZmVycmVuY2VcbiAgICAgIGlmIChjb250ZXh0ICYmIGNvbnRleHQuX3JlZ2lzdGVyZWRDb21wb25lbnRzKSB7XG4gICAgICAgIGNvbnRleHQuX3JlZ2lzdGVyZWRDb21wb25lbnRzLmFkZChtb2R1bGVJZGVudGlmaWVyKVxuICAgICAgfVxuICAgIH1cbiAgICAvLyB1c2VkIGJ5IHNzciBpbiBjYXNlIGNvbXBvbmVudCBpcyBjYWNoZWQgYW5kIGJlZm9yZUNyZWF0ZVxuICAgIC8vIG5ldmVyIGdldHMgY2FsbGVkXG4gICAgb3B0aW9ucy5fc3NyUmVnaXN0ZXIgPSBob29rXG4gIH0gZWxzZSBpZiAoaW5qZWN0U3R5bGVzKSB7XG4gICAgaG9vayA9IHNoYWRvd01vZGVcbiAgICAgID8gZnVuY3Rpb24gKCkgeyBpbmplY3RTdHlsZXMuY2FsbCh0aGlzLCB0aGlzLiRyb290LiRvcHRpb25zLnNoYWRvd1Jvb3QpIH1cbiAgICAgIDogaW5qZWN0U3R5bGVzXG4gIH1cblxuICBpZiAoaG9vaykge1xuICAgIGlmIChvcHRpb25zLmZ1bmN0aW9uYWwpIHtcbiAgICAgIC8vIGZvciB0ZW1wbGF0ZS1vbmx5IGhvdC1yZWxvYWQgYmVjYXVzZSBpbiB0aGF0IGNhc2UgdGhlIHJlbmRlciBmbiBkb2Vzbid0XG4gICAgICAvLyBnbyB0aHJvdWdoIHRoZSBub3JtYWxpemVyXG4gICAgICBvcHRpb25zLl9pbmplY3RTdHlsZXMgPSBob29rXG4gICAgICAvLyByZWdpc3RlciBmb3IgZnVuY3Rpb2FsIGNvbXBvbmVudCBpbiB2dWUgZmlsZVxuICAgICAgdmFyIG9yaWdpbmFsUmVuZGVyID0gb3B0aW9ucy5yZW5kZXJcbiAgICAgIG9wdGlvbnMucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyV2l0aFN0eWxlSW5qZWN0aW9uIChoLCBjb250ZXh0KSB7XG4gICAgICAgIGhvb2suY2FsbChjb250ZXh0KVxuICAgICAgICByZXR1cm4gb3JpZ2luYWxSZW5kZXIoaCwgY29udGV4dClcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gaW5qZWN0IGNvbXBvbmVudCByZWdpc3RyYXRpb24gYXMgYmVmb3JlQ3JlYXRlIGhvb2tcbiAgICAgIHZhciBleGlzdGluZyA9IG9wdGlvbnMuYmVmb3JlQ3JlYXRlXG4gICAgICBvcHRpb25zLmJlZm9yZUNyZWF0ZSA9IGV4aXN0aW5nXG4gICAgICAgID8gW10uY29uY2F0KGV4aXN0aW5nLCBob29rKVxuICAgICAgICA6IFtob29rXVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZXhwb3J0czogc2NyaXB0RXhwb3J0cyxcbiAgICBvcHRpb25zOiBvcHRpb25zXG4gIH1cbn1cbiIsInZhciBkaXNwb3NlZCA9IGZhbHNlXG5mdW5jdGlvbiBpbmplY3RTdHlsZSAoY29udGV4dCkge1xuICBpZiAoZGlzcG9zZWQpIHJldHVyblxuICByZXF1aXJlKFwiISF2dWUtc3R5bGUtbG9hZGVyIWNzcy1sb2FkZXIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4P3tcXFwib3B0aW9uc0lkXFxcIjpcXFwiMFxcXCIsXFxcInZ1ZVxcXCI6dHJ1ZSxcXFwic2NvcGVkXFxcIjpmYWxzZSxcXFwic291cmNlTWFwXFxcIjp0cnVlfSFzYXNzLWxvYWRlciEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL0JyZWFkY3J1bWIudnVlXCIpXG59XG4vKiBzY3JpcHQgKi9cbmV4cG9ydCAqIGZyb20gXCIhIWJhYmVsLWxvYWRlciEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL0JyZWFkY3J1bWIudnVlXCJcbmltcG9ydCBfX3Z1ZV9zY3JpcHRfXyBmcm9tIFwiISFiYWJlbC1sb2FkZXIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9c2NyaXB0JmluZGV4PTAhLi9CcmVhZGNydW1iLnZ1ZVwiXG4vKiB0ZW1wbGF0ZSAqL1xuaW1wb3J0IHtyZW5kZXIgYXMgX192dWVfcmVuZGVyX18sIHN0YXRpY1JlbmRlckZucyBhcyBfX3Z1ZV9zdGF0aWNfcmVuZGVyX2Zuc19ffSBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXIvaW5kZXg/e1xcXCJpZFxcXCI6XFxcImRhdGEtdi1kYzk2N2M4OFxcXCIsXFxcImhhc1Njb3BlZFxcXCI6ZmFsc2UsXFxcIm9wdGlvbnNJZFxcXCI6XFxcIjBcXFwiLFxcXCJidWJsZVxcXCI6e1xcXCJ0cmFuc2Zvcm1zXFxcIjp7fX19IS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXRlbXBsYXRlJmluZGV4PTAhLi9CcmVhZGNydW1iLnZ1ZVwiXG4vKiB0ZW1wbGF0ZSBmdW5jdGlvbmFsICovXG52YXIgX192dWVfdGVtcGxhdGVfZnVuY3Rpb25hbF9fID0gZmFsc2Vcbi8qIHN0eWxlcyAqL1xudmFyIF9fdnVlX3N0eWxlc19fID0gaW5qZWN0U3R5bGVcbi8qIHNjb3BlSWQgKi9cbnZhciBfX3Z1ZV9zY29wZUlkX18gPSBudWxsXG4vKiBtb2R1bGVJZGVudGlmaWVyIChzZXJ2ZXIgb25seSkgKi9cbnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fID0gbnVsbFxuaW1wb3J0IG5vcm1hbGl6ZUNvbXBvbmVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudC1ub3JtYWxpemVyXCJcbnZhciBDb21wb25lbnQgPSBub3JtYWxpemVDb21wb25lbnQoXG4gIF9fdnVlX3NjcmlwdF9fLFxuICBfX3Z1ZV9yZW5kZXJfXyxcbiAgX192dWVfc3RhdGljX3JlbmRlcl9mbnNfXyxcbiAgX192dWVfdGVtcGxhdGVfZnVuY3Rpb25hbF9fLFxuICBfX3Z1ZV9zdHlsZXNfXyxcbiAgX192dWVfc2NvcGVJZF9fLFxuICBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fXG4pXG5Db21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInNyY1xcXFxjb21wb25lbnRzXFxcXEJyZWFkY3J1bWJcXFxcQnJlYWRjcnVtYi52dWVcIlxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7XG4gIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIGZhbHNlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAoIW1vZHVsZS5ob3QuZGF0YSkge1xuICAgIGhvdEFQSS5jcmVhdGVSZWNvcmQoXCJkYXRhLXYtZGM5NjdjODhcIiwgQ29tcG9uZW50Lm9wdGlvbnMpXG4gIH0gZWxzZSB7XG4gICAgaG90QVBJLnJlbG9hZChcImRhdGEtdi1kYzk2N2M4OFwiLCBDb21wb25lbnQub3B0aW9ucylcbiAgfVxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICBkaXNwb3NlZCA9IHRydWVcbiAgfSlcbn0pKCl9XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudC5leHBvcnRzXG4iLCJpbXBvcnQgQnJlYWRjcnVtYiBmcm9tICcuL0JyZWFkY3J1bWIudnVlJ1xyXG5leHBvcnQgeyBCcmVhZGNydW1iIH1cclxuIiwiPHRlbXBsYXRlPlxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5cclxufVxyXG48L3NjcmlwdD5cclxuIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcImRpdlwiKVxufVxudmFyIHN0YXRpY1JlbmRlckZucyA9IFtdXG5yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcbmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH1cbmlmIChtb2R1bGUuaG90KSB7XG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKG1vZHVsZS5ob3QuZGF0YSkge1xuICAgIHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIikgICAgICAucmVyZW5kZXIoXCJkYXRhLXYtOGYyMDc3ZTZcIiwgeyByZW5kZXI6IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnMgfSlcbiAgfVxufSIsInZhciBkaXNwb3NlZCA9IGZhbHNlXG4vKiBzY3JpcHQgKi9cbmV4cG9ydCAqIGZyb20gXCIhIWJhYmVsLWxvYWRlciEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL0Jhc2VCdXR0b24udnVlXCJcbmltcG9ydCBfX3Z1ZV9zY3JpcHRfXyBmcm9tIFwiISFiYWJlbC1sb2FkZXIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9c2NyaXB0JmluZGV4PTAhLi9CYXNlQnV0dG9uLnZ1ZVwiXG4vKiB0ZW1wbGF0ZSAqL1xuaW1wb3J0IHtyZW5kZXIgYXMgX192dWVfcmVuZGVyX18sIHN0YXRpY1JlbmRlckZucyBhcyBfX3Z1ZV9zdGF0aWNfcmVuZGVyX2Zuc19ffSBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXIvaW5kZXg/e1xcXCJpZFxcXCI6XFxcImRhdGEtdi04ZjIwNzdlNlxcXCIsXFxcImhhc1Njb3BlZFxcXCI6ZmFsc2UsXFxcIm9wdGlvbnNJZFxcXCI6XFxcIjBcXFwiLFxcXCJidWJsZVxcXCI6e1xcXCJ0cmFuc2Zvcm1zXFxcIjp7fX19IS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXRlbXBsYXRlJmluZGV4PTAhLi9CYXNlQnV0dG9uLnZ1ZVwiXG4vKiB0ZW1wbGF0ZSBmdW5jdGlvbmFsICovXG52YXIgX192dWVfdGVtcGxhdGVfZnVuY3Rpb25hbF9fID0gZmFsc2Vcbi8qIHN0eWxlcyAqL1xudmFyIF9fdnVlX3N0eWxlc19fID0gbnVsbFxuLyogc2NvcGVJZCAqL1xudmFyIF9fdnVlX3Njb3BlSWRfXyA9IG51bGxcbi8qIG1vZHVsZUlkZW50aWZpZXIgKHNlcnZlciBvbmx5KSAqL1xudmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18gPSBudWxsXG5pbXBvcnQgbm9ybWFsaXplQ29tcG9uZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50LW5vcm1hbGl6ZXJcIlxudmFyIENvbXBvbmVudCA9IG5vcm1hbGl6ZUNvbXBvbmVudChcbiAgX192dWVfc2NyaXB0X18sXG4gIF9fdnVlX3JlbmRlcl9fLFxuICBfX3Z1ZV9zdGF0aWNfcmVuZGVyX2Zuc19fLFxuICBfX3Z1ZV90ZW1wbGF0ZV9mdW5jdGlvbmFsX18sXG4gIF9fdnVlX3N0eWxlc19fLFxuICBfX3Z1ZV9zY29wZUlkX18sXG4gIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX19cbilcbkNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwic3JjXFxcXGNvbXBvbmVudHNcXFxcQnV0dG9uXFxcXEJhc2VCdXR0b24udnVlXCJcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkge1xuICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCBmYWxzZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LThmMjA3N2U2XCIsIENvbXBvbmVudC5vcHRpb25zKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtOGYyMDc3ZTZcIiwgQ29tcG9uZW50Lm9wdGlvbnMpXG4gIH1cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgZGlzcG9zZWQgPSB0cnVlXG4gIH0pXG59KSgpfVxuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQuZXhwb3J0c1xuIiwiPHRlbXBsYXRlPlxyXG4gIFxyXG48L3RlbXBsYXRlPlxyXG5cclxuPHNjcmlwdD5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG59XHJcbjwvc2NyaXB0PlxyXG4iLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF9jKFwiZGl2XCIpXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfVxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAobW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKSAgICAgIC5yZXJlbmRlcihcImRhdGEtdi0wNjA0YjhhMFwiLCB7IHJlbmRlcjogcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZucyB9KVxuICB9XG59IiwidmFyIGRpc3Bvc2VkID0gZmFsc2Vcbi8qIHNjcmlwdCAqL1xuZXhwb3J0ICogZnJvbSBcIiEhYmFiZWwtbG9hZGVyIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXNjcmlwdCZpbmRleD0wIS4vRGVmYXVsdEJ1dHRvbi52dWVcIlxuaW1wb3J0IF9fdnVlX3NjcmlwdF9fIGZyb20gXCIhIWJhYmVsLWxvYWRlciEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL0RlZmF1bHRCdXR0b24udnVlXCJcbi8qIHRlbXBsYXRlICovXG5pbXBvcnQge3JlbmRlciBhcyBfX3Z1ZV9yZW5kZXJfXywgc3RhdGljUmVuZGVyRm5zIGFzIF9fdnVlX3N0YXRpY19yZW5kZXJfZm5zX199IGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlci9pbmRleD97XFxcImlkXFxcIjpcXFwiZGF0YS12LTA2MDRiOGEwXFxcIixcXFwiaGFzU2NvcGVkXFxcIjpmYWxzZSxcXFwib3B0aW9uc0lkXFxcIjpcXFwiMFxcXCIsXFxcImJ1YmxlXFxcIjp7XFxcInRyYW5zZm9ybXNcXFwiOnt9fX0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL0RlZmF1bHRCdXR0b24udnVlXCJcbi8qIHRlbXBsYXRlIGZ1bmN0aW9uYWwgKi9cbnZhciBfX3Z1ZV90ZW1wbGF0ZV9mdW5jdGlvbmFsX18gPSBmYWxzZVxuLyogc3R5bGVzICovXG52YXIgX192dWVfc3R5bGVzX18gPSBudWxsXG4vKiBzY29wZUlkICovXG52YXIgX192dWVfc2NvcGVJZF9fID0gbnVsbFxuLyogbW9kdWxlSWRlbnRpZmllciAoc2VydmVyIG9ubHkpICovXG52YXIgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyA9IG51bGxcbmltcG9ydCBub3JtYWxpemVDb21wb25lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnQtbm9ybWFsaXplclwiXG52YXIgQ29tcG9uZW50ID0gbm9ybWFsaXplQ29tcG9uZW50KFxuICBfX3Z1ZV9zY3JpcHRfXyxcbiAgX192dWVfcmVuZGVyX18sXG4gIF9fdnVlX3N0YXRpY19yZW5kZXJfZm5zX18sXG4gIF9fdnVlX3RlbXBsYXRlX2Z1bmN0aW9uYWxfXyxcbiAgX192dWVfc3R5bGVzX18sXG4gIF9fdnVlX3Njb3BlSWRfXyxcbiAgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfX1xuKVxuQ29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJzcmNcXFxcY29tcG9uZW50c1xcXFxCdXR0b25cXFxcRGVmYXVsdEJ1dHRvblxcXFxEZWZhdWx0QnV0dG9uLnZ1ZVwiXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHtcbiAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgZmFsc2UpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi0wNjA0YjhhMFwiLCBDb21wb25lbnQub3B0aW9ucylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LTA2MDRiOGEwXCIsIENvbXBvbmVudC5vcHRpb25zKVxuICB9XG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbiAoZGF0YSkge1xuICAgIGRpc3Bvc2VkID0gdHJ1ZVxuICB9KVxufSkoKX1cblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50LmV4cG9ydHNcbiIsImltcG9ydCBCYXNlQnV0dG9uIGZyb20gJy4vQmFzZUJ1dHRvbi52dWUnXHJcbi8vIGltcG9ydCBCdXR0b24gZnJvbSAnLi9CdXR0b24udnVlJ1xyXG4vLyBpbXBvcnQgQWN0aW9uQnV0dG9uIGZyb20gJy4vQWN0aW9uQnV0dG9uL0FjdGlvbkJ1dHRvbi52dWUnXHJcbi8vIGltcG9ydCBCYXJCdXR0b24gZnJvbSAnLi9Db21tYW5kQmFyQnV0dG9uL0NvbW1hbmRCYXJCdXR0b24udnVlJ1xyXG4vLyBpbXBvcnQgQ29tbWFuZEJ1dHRvbiBmcm9tICcuL0NvbW1hbmRCdXR0b24vQ29tbWFuZEJ1dHRvbi52dWUnXHJcbi8vIGltcG9ydCBDb21wb3VuZEJ1dHRvbiBmcm9tICcuL0NvbXBvdW5kQnV0dG9uL0NvbXBvdW5kQnV0dG9uLnZ1ZSdcclxuaW1wb3J0IERlZmF1bHRCdXR0b24gZnJvbSAnLi9EZWZhdWx0QnV0dG9uL0RlZmF1bHRCdXR0b24udnVlJ1xyXG4vLyBpbXBvcnQgUHJpbWFyeUJ1dHRvbiBmcm9tICcuL1ByaW1hcnlCdXR0b24vUHJpbWFyeUJ1dHRvbi52dWUnXHJcbi8vIGltcG9ydCBJY29uQnV0dG9uIGZyb20gJy4vSWNvbkJ1dHRvbi9JY29uQnV0dG9uLnZ1ZSdcclxuXHJcbmV4cG9ydCB7XHJcbiAgQmFzZUJ1dHRvbixcclxuICAvLyBCdXR0b24sXHJcbiAgLy8gQWN0aW9uQnV0dG9uLFxyXG4gIC8vIEJhckJ1dHRvbixcclxuICAvLyBDb21tYW5kQnV0dG9uLFxyXG4gIC8vIENvbXBvdW5kQnV0dG9uLFxyXG4gIERlZmF1bHRCdXR0b24sXHJcbiAgLy8gUHJpbWFyeUJ1dHRvbixcclxuICAvLyBJY29uQnV0dG9uXHJcbn1cclxuIiwiY29uc3QgQ09MT1JfU1dBVENIRVNfTE9PS1VQID0gW1xuICAnbGlnaHRHcmVlbicsXG4gICdsaWdodEJsdWUnLFxuICAnbGlnaHRQaW5rJyxcbiAgJ2dyZWVuJyxcbiAgJ2RhcmtHcmVlbicsXG4gICdwaW5rJyxcbiAgJ21hZ2VudGEnLFxuICAncHVycGxlJyxcbiAgJ2JsYWNrJyxcbiAgJ3RlYWwnLFxuICAnYmx1ZScsXG4gICdkYXJrQmx1ZScsXG4gICdvcmFuZ2UnLFxuICAnZGFya1JlZCcsXG5dXG5cbmNvbnN0IENPTE9SX1NXQVRDSEVTX05VTV9FTlRSSUVTID0gQ09MT1JfU1dBVENIRVNfTE9PS1VQLmxlbmd0aFxuXG5mdW5jdGlvbiBnZXRJbml0aWFsc0NvbG9yRnJvbU5hbWUgKGRpc3BsYXlOYW1lKSB7XG4gIGxldCBjb2xvciA9ICdibHVlJ1xuICBpZiAoIWRpc3BsYXlOYW1lKSB7XG4gICAgcmV0dXJuIGNvbG9yXG4gIH1cblxuICBsZXQgaGFzaENvZGUgPSAwXG4gIGZvciAobGV0IGlMZW4gPSBkaXNwbGF5TmFtZS5sZW5ndGggLSAxOyBpTGVuID49IDA7IGlMZW4tLSkge1xuICAgIGNvbnN0IGNoID0gZGlzcGxheU5hbWUuY2hhckNvZGVBdChpTGVuKVxuICAgIGNvbnN0IHNoaWZ0ID0gaUxlbiAlIDhcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tYml0d2lzZVxuICAgIGhhc2hDb2RlIF49IChjaCA8PCBzaGlmdCkgKyAoY2ggPj4gKDggLSBzaGlmdCkpXG4gIH1cblxuICBjb2xvciA9IENPTE9SX1NXQVRDSEVTX0xPT0tVUFtoYXNoQ29kZSAlIENPTE9SX1NXQVRDSEVTX05VTV9FTlRSSUVTXVxuXG4gIHJldHVybiBjb2xvclxufVxuXG5mdW5jdGlvbiBwZXJzb25hSW5pdGlhbHNDb2xvclRvSGV4Q29kZSAocGVyc29uYUluaXRpYWxzQ29sb3IpIHtcbiAgc3dpdGNoIChwZXJzb25hSW5pdGlhbHNDb2xvcikge1xuICAgIGNhc2UgJ2xpZ2h0Qmx1ZSc6IHJldHVybiAnIzZCQTVFNydcbiAgICBjYXNlICdibHVlJzogcmV0dXJuICcjMkQ4OUVGJ1xuICAgIGNhc2UgJ2RhcmtCbHVlJzogcmV0dXJuICcjMkI1Nzk3J1xuICAgIGNhc2UgJ3RlYWwnOiByZXR1cm4gJyMwMEFCQTknXG4gICAgY2FzZSAnbGlnaHRHcmVlbic6IHJldHVybiAnIzk5QjQzMydcbiAgICBjYXNlICdncmVlbic6IHJldHVybiAnIzAwQTMwMCdcbiAgICBjYXNlICdkYXJrR3JlZW4nOiByZXR1cm4gJyMxRTcxNDUnXG4gICAgY2FzZSAnbGlnaHRQaW5rJzogcmV0dXJuICcjRTc3M0JEJ1xuICAgIGNhc2UgJ3BpbmsnOiByZXR1cm4gJyNGRjAwOTcnXG4gICAgY2FzZSAnbWFnZW50YSc6IHJldHVybiAnICM3RTM4NzgnXG4gICAgY2FzZSAncHVycGxlJzogcmV0dXJuICcjNjAzQ0JBJ1xuICAgIGNhc2UgJ2JsYWNrJzogcmV0dXJuICcjMUQxRDFEJ1xuICAgIGNhc2UgJ29yYW5nZSc6IHJldHVybiAnI0RBNTMyQydcbiAgICBjYXNlICdyZWQnOiByZXR1cm4gJyNFRTExMTEnXG4gICAgY2FzZSAnZGFya1JlZCc6IHJldHVybiAnI0I5MUQ0NydcbiAgICBjYXNlICd0cmFuc3BhcmVudCc6IHJldHVybiAndHJhbnNwYXJlbnQnXG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluaXRpYWxzQ29sb3JQcm9wVG9Db2xvckNvZGUgKHByb3BzKSB7XG4gIGNvbnN0IHsgcHJpbWFyeVRleHQgfSA9IHByb3BzXG4gIGxldCB7IGluaXRpYWxzQ29sb3IgfSA9IHByb3BzXG4gIGxldCBpbml0aWFsc0NvbG9yQ29kZVxuICBpZiAodHlwZW9mIGluaXRpYWxzQ29sb3IgPT09ICdzdHJpbmcnKSB7XG4gICAgaW5pdGlhbHNDb2xvckNvZGUgPSBpbml0aWFsc0NvbG9yXG4gIH0gZWxzZSB7XG4gICAgaW5pdGlhbHNDb2xvciA9IGluaXRpYWxzQ29sb3IgIT09IHVuZGVmaW5lZCA/IGluaXRpYWxzQ29sb3IgOiBnZXRJbml0aWFsc0NvbG9yRnJvbU5hbWUocHJpbWFyeVRleHQpXG4gICAgaW5pdGlhbHNDb2xvckNvZGUgPSBwZXJzb25hSW5pdGlhbHNDb2xvclRvSGV4Q29kZShpbml0aWFsc0NvbG9yKVxuICB9XG5cbiAgcmV0dXJuIGluaXRpYWxzQ29sb3JDb2RlXG59XG4iLCI8dGVtcGxhdGU+XG4gIDxkaXYgOnN0eWxlPVwieyAnYmFja2dyb3VuZC1jb2xvcic6IGluaXRpYWxzQ29sb3IgfVwiXG4gICAgICAgY2xhc3M9XCJtcy1QZXJzb25hLWluaXRpYWxzXCI+XG4gICAgPHNwYW4+e3sgaW5pdGlhbHMgfX08L3NwYW4+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCB7IGluaXRpYWxzQ29sb3JQcm9wVG9Db2xvckNvZGUgfSBmcm9tICcuL2luaXRpYWxzLmpzJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHByb3BzOiB7XG4gICAgbmFtZToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgfSxcbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBpbml0aWFsc0NvbG9yICgpIHtcbiAgICAgIHJldHVybiBpbml0aWFsc0NvbG9yUHJvcFRvQ29sb3JDb2RlKHtcbiAgICAgICAgcHJpbWFyeVRleHQ6IHRoaXMubmFtZSxcbiAgICAgIH0pXG4gICAgfSxcbiAgICBpbml0aWFscyAoKSB7XG4gICAgICBsZXQgbmFtZSA9IHRoaXMubmFtZVxuICAgICAgbGV0IHNwbGl0ID0gbmFtZS5zcGxpdCgnICcpXG4gICAgICBsZXQgZmlyc3QgPSBzcGxpdFswXVxuICAgICAgbGV0IGxhc3QgPSBzcGxpdFtzcGxpdC5sZW5ndGggLSAxXVxuICAgICAgaWYgKHNwbGl0Lmxlbmd0aCA+IDEpIHtcbiAgICAgICAgcmV0dXJuIGZpcnN0WzBdICsgbGFzdFswXVxuICAgICAgfVxuICAgICAgcmV0dXJuIGZpcnN0WzBdXG4gICAgfSxcbiAgfSxcbn1cbjwvc2NyaXB0PlxuIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcbiAgICBcImRpdlwiLFxuICAgIHtcbiAgICAgIHN0YXRpY0NsYXNzOiBcIm1zLVBlcnNvbmEtaW5pdGlhbHNcIixcbiAgICAgIHN0eWxlOiB7IFwiYmFja2dyb3VuZC1jb2xvclwiOiBfdm0uaW5pdGlhbHNDb2xvciB9XG4gICAgfSxcbiAgICBbX2MoXCJzcGFuXCIsIFtfdm0uX3YoX3ZtLl9zKF92bS5pbml0aWFscykpXSldXG4gIClcbn1cbnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXVxucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9XG5pZiAobW9kdWxlLmhvdCkge1xuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmIChtb2R1bGUuaG90LmRhdGEpIHtcbiAgICByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpICAgICAgLnJlcmVuZGVyKFwiZGF0YS12LTE4MzE0ODZhXCIsIHsgcmVuZGVyOiByZW5kZXIsIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zIH0pXG4gIH1cbn0iLCJ2YXIgZGlzcG9zZWQgPSBmYWxzZVxuLyogc2NyaXB0ICovXG5leHBvcnQgKiBmcm9tIFwiISFiYWJlbC1sb2FkZXIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9c2NyaXB0JmluZGV4PTAhLi9QZXJzb25hSW5pdGlhbHMudnVlXCJcbmltcG9ydCBfX3Z1ZV9zY3JpcHRfXyBmcm9tIFwiISFiYWJlbC1sb2FkZXIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9c2NyaXB0JmluZGV4PTAhLi9QZXJzb25hSW5pdGlhbHMudnVlXCJcbi8qIHRlbXBsYXRlICovXG5pbXBvcnQge3JlbmRlciBhcyBfX3Z1ZV9yZW5kZXJfXywgc3RhdGljUmVuZGVyRm5zIGFzIF9fdnVlX3N0YXRpY19yZW5kZXJfZm5zX199IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlci9pbmRleD97XFxcImlkXFxcIjpcXFwiZGF0YS12LTE4MzE0ODZhXFxcIixcXFwiaGFzU2NvcGVkXFxcIjpmYWxzZSxcXFwib3B0aW9uc0lkXFxcIjpcXFwiMFxcXCIsXFxcImJ1YmxlXFxcIjp7XFxcInRyYW5zZm9ybXNcXFwiOnt9fX0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL1BlcnNvbmFJbml0aWFscy52dWVcIlxuLyogdGVtcGxhdGUgZnVuY3Rpb25hbCAqL1xudmFyIF9fdnVlX3RlbXBsYXRlX2Z1bmN0aW9uYWxfXyA9IGZhbHNlXG4vKiBzdHlsZXMgKi9cbnZhciBfX3Z1ZV9zdHlsZXNfXyA9IG51bGxcbi8qIHNjb3BlSWQgKi9cbnZhciBfX3Z1ZV9zY29wZUlkX18gPSBudWxsXG4vKiBtb2R1bGVJZGVudGlmaWVyIChzZXJ2ZXIgb25seSkgKi9cbnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fID0gbnVsbFxuaW1wb3J0IG5vcm1hbGl6ZUNvbXBvbmVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudC1ub3JtYWxpemVyXCJcbnZhciBDb21wb25lbnQgPSBub3JtYWxpemVDb21wb25lbnQoXG4gIF9fdnVlX3NjcmlwdF9fLFxuICBfX3Z1ZV9yZW5kZXJfXyxcbiAgX192dWVfc3RhdGljX3JlbmRlcl9mbnNfXyxcbiAgX192dWVfdGVtcGxhdGVfZnVuY3Rpb25hbF9fLFxuICBfX3Z1ZV9zdHlsZXNfXyxcbiAgX192dWVfc2NvcGVJZF9fLFxuICBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fXG4pXG5Db21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInNyY1xcXFxjb21wb25lbnRzXFxcXFBlcnNvbmFcXFxcUGVyc29uYUluaXRpYWxzLnZ1ZVwiXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHtcbiAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgZmFsc2UpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi0xODMxNDg2YVwiLCBDb21wb25lbnQub3B0aW9ucylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LTE4MzE0ODZhXCIsIENvbXBvbmVudC5vcHRpb25zKVxuICB9XG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbiAoZGF0YSkge1xuICAgIGRpc3Bvc2VkID0gdHJ1ZVxuICB9KVxufSkoKX1cblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50LmV4cG9ydHNcbiIsIjx0ZW1wbGF0ZT5cclxuICA8ZGl2IDpzaXplPVwic2l6ZVwiIGNsYXNzPVwibXMtUGVyc29uYVwiPlxyXG5cclxuICAgIDxkaXYgY2xhc3M9XCJtcy1QZXJzb25hLWNvaW5cIj5cclxuXHJcbiAgICAgIDxpIHYtaWY9XCJzaXplID09PSA5XCJcclxuICAgICAgICAgY2xhc3M9XCJtcy1JY29uIG1zLUljb24tLUNvbnRhY3RcIlxyXG4gICAgICAgICBhcmlhLWhpZGRlbj1cInRydWVcIi8+XHJcblxyXG4gICAgICA8ZGl2IHYtZWxzZVxyXG4gICAgICAgICAgIGNsYXNzPVwibXMtUGVyc29uYS1pbWFnZUFyZWFcIj5cclxuXHJcbiAgICAgICAgPHBlcnNvbmEtaW5pdGlhbHMgdi1pZj1cIiFwZXJzb24uYXZhdGFyXCIgOm5hbWU9XCJwZXJzb24ubmFtZVwiLz5cclxuXHJcbiAgICAgICAgPGRpdiB2LWVsc2UgY2xhc3M9XCJtcy1JbWFnZSBtcy1QZXJzb25hLWltYWdlXCI+XHJcbiAgICAgICAgICA8aW1nIDpzcmM9XCJwZXJzb24uYXZhdGFyXCIgY2xhc3M9XCJtcy1JbWFnZS1pbWFnZVwiIGFsdD1cIlwiPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuXHJcbiAgICA8L2Rpdj5cclxuXHJcbiAgICA8ZGl2IGNsYXNzPVwibXMtUGVyc29uYS1kZXRhaWxzXCI+XHJcblxyXG4gICAgICA8ZGl2IGNsYXNzPVwibXMtUGVyc29uYS1wcmltYXJ5VGV4dFwiPlxyXG4gICAgICAgIDxzcGFuIDp0aXRsZT1cInBlcnNvbi5uYW1lXCI+e3sgcGVyc29uLm5hbWUgfX08L3NwYW4+XHJcbiAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgPHNsb3QgLz5cclxuXHJcbiAgICA8L2Rpdj5cclxuICA8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcbmltcG9ydCBQZXJzb25hSW5pdGlhbHMgZnJvbSAnLi9QZXJzb25hSW5pdGlhbHMudnVlJ1xyXG5cclxubGV0IHNpemU3MiA9IDE0XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgY29tcG9uZW50czogeyBQZXJzb25hSW5pdGlhbHMgfSxcclxuICBwcm9wczoge1xyXG4gICAgcHJpbWFyeVRleHQ6IHtcclxuICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICBkZWZhdWx0OiAnJyxcclxuICAgIH0sXHJcbiAgICBzZWNvbmRhcnlUZXh0OiB7XHJcbiAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgZGVmYXVsdDogJycsXHJcbiAgICB9LFxyXG4gICAgdGVydGlhcnlUZXh0OiB7XHJcbiAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgZGVmYXVsdDogJycsXHJcbiAgICB9LFxyXG4gICAgc2l6ZToge1xyXG4gICAgICB0eXBlOiBOdW1iZXIsXHJcbiAgICAgIGRlZmF1bHQ6IHNpemU3MixcclxuICAgIH0sXHJcbiAgICBwcmVzZW5jZToge1xyXG4gICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgIGRlZmF1bHQ6ICcnLFxyXG4gICAgfSxcclxuICB9LFxyXG59XHJcbjwvc2NyaXB0PlxyXG5cclxuPHN0eWxlIGxhbmc9XCJzY3NzXCIgc2NvcGVkPlxyXG4ubXMtUGVyc29uYVtzaXplPVwiMTRcIl0ge1xyXG4gID4gLm1zLVBlcnNvbmEtZGV0YWlscyB7XHJcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gODdweCk7XHJcbiAgfVxyXG59XHJcblxyXG4ubXMtUGVyc29uYVtzaXplPVwiOVwiXSB7XHJcbiAgPiAubXMtUGVyc29uYS1jb2luIHtcclxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XHJcbiAgfVxyXG5cclxuICA+IC5tcy1QZXJzb25hLWRldGFpbHMge1xyXG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDI1cHgpO1xyXG4gIH1cclxufVxyXG5cclxuLm1zLVBlcnNvbmEge1xyXG4gIGhlaWdodDogaW5pdGlhbCAhaW1wb3J0YW50O1xyXG5cclxuICA+IC5tcy1QZXJzb25hLWNvaW4ge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIGZvbnQtc2l6ZTogMTBweDtcclxuXHJcbiAgICA+IC5tcy1JY29uIHtcclxuICAgICAgcGFkZGluZy10b3A6IDRweDtcclxuICAgIH1cclxuXHJcbiAgICA+IC5tcy1QZXJzb25hLWltYWdlQXJlYSB7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAgIGhlaWdodDogNzJweDtcclxuICAgICAgd2lkdGg6IDcycHg7XHJcblxyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgICA+IC5tcy1QZXJzb25hLWluaXRpYWxzIHtcclxuICAgICAgICBoZWlnaHQ6IDcycHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDcycHg7XHJcbiAgICAgICAgZm9udC1zaXplOiAyOHB4O1xyXG5cclxuICAgICAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMzAsIDExMywgNjkpO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgfVxyXG5cclxuICAgICAgPiAubXMtUGVyc29uYS1pbWFnZSB7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgIH1cclxuXHJcbiAgICAgID4gLm1zLUltYWdlIHtcclxuXHJcbiAgICAgICAgaGVpZ2h0OiA3MnB4O1xyXG4gICAgICAgIHdpZHRoOiA3MnB4O1xyXG5cclxuICAgICAgICA+IC5tcy1JbWFnZS1pbWFnZSB7XHJcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICA+IC5tcy1QZXJzb25hLWRldGFpbHMge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuXHJcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcblxyXG4gICAgLm1zLVBlcnNvbmEtcHJpbWFyeVRleHQge1xyXG4gICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG48L3N0eWxlPlxyXG4iLCJ2YXIgcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwibXMtUGVyc29uYVwiLCBhdHRyczogeyBzaXplOiBfdm0uc2l6ZSB9IH0sIFtcbiAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcIm1zLVBlcnNvbmEtY29pblwiIH0sIFtcbiAgICAgIF92bS5zaXplID09PSA5XG4gICAgICAgID8gX2MoXCJpXCIsIHtcbiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcIm1zLUljb24gbXMtSWNvbi0tQ29udGFjdFwiLFxuICAgICAgICAgICAgYXR0cnM6IHsgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIiB9XG4gICAgICAgICAgfSlcbiAgICAgICAgOiBfYyhcbiAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcIm1zLVBlcnNvbmEtaW1hZ2VBcmVhXCIgfSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgIV92bS5wZXJzb24uYXZhdGFyXG4gICAgICAgICAgICAgICAgPyBfYyhcInBlcnNvbmEtaW5pdGlhbHNcIiwgeyBhdHRyczogeyBuYW1lOiBfdm0ucGVyc29uLm5hbWUgfSB9KVxuICAgICAgICAgICAgICAgIDogX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJtcy1JbWFnZSBtcy1QZXJzb25hLWltYWdlXCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICBfYyhcImltZ1wiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwibXMtSW1hZ2UtaW1hZ2VcIixcbiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IF92bS5wZXJzb24uYXZhdGFyLCBhbHQ6IFwiXCIgfVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAxXG4gICAgICAgICAgKVxuICAgIF0pLFxuICAgIF92bS5fdihcIiBcIiksXG4gICAgX2MoXG4gICAgICBcImRpdlwiLFxuICAgICAgeyBzdGF0aWNDbGFzczogXCJtcy1QZXJzb25hLWRldGFpbHNcIiB9LFxuICAgICAgW1xuICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcIm1zLVBlcnNvbmEtcHJpbWFyeVRleHRcIiB9LCBbXG4gICAgICAgICAgX2MoXCJzcGFuXCIsIHsgYXR0cnM6IHsgdGl0bGU6IF92bS5wZXJzb24ubmFtZSB9IH0sIFtcbiAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLnBlcnNvbi5uYW1lKSlcbiAgICAgICAgICBdKVxuICAgICAgICBdKSxcbiAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgX3ZtLl90KFwiZGVmYXVsdFwiKVxuICAgICAgXSxcbiAgICAgIDJcbiAgICApXG4gIF0pXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfVxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAobW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKSAgICAgIC5yZXJlbmRlcihcImRhdGEtdi1kNzM3ZWQwOFwiLCB7IHJlbmRlcjogcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnM6IHN0YXRpY1JlbmRlckZucyB9KVxuICB9XG59IiwidmFyIGRpc3Bvc2VkID0gZmFsc2VcbmZ1bmN0aW9uIGluamVjdFN0eWxlIChjb250ZXh0KSB7XG4gIGlmIChkaXNwb3NlZCkgcmV0dXJuXG4gIHJlcXVpcmUoXCIhIXZ1ZS1zdHlsZS1sb2FkZXIhY3NzLWxvYWRlciEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXIvaW5kZXg/e1xcXCJvcHRpb25zSWRcXFwiOlxcXCIwXFxcIixcXFwidnVlXFxcIjp0cnVlLFxcXCJpZFxcXCI6XFxcImRhdGEtdi1kNzM3ZWQwOFxcXCIsXFxcInNjb3BlZFxcXCI6dHJ1ZSxcXFwic291cmNlTWFwXFxcIjp0cnVlfSFzYXNzLWxvYWRlciEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL1BlcnNvbmEudnVlXCIpXG59XG4vKiBzY3JpcHQgKi9cbmV4cG9ydCAqIGZyb20gXCIhIWJhYmVsLWxvYWRlciEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3I/dHlwZT1zY3JpcHQmaW5kZXg9MCEuL1BlcnNvbmEudnVlXCJcbmltcG9ydCBfX3Z1ZV9zY3JpcHRfXyBmcm9tIFwiISFiYWJlbC1sb2FkZXIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9c2NyaXB0JmluZGV4PTAhLi9QZXJzb25hLnZ1ZVwiXG4vKiB0ZW1wbGF0ZSAqL1xuaW1wb3J0IHtyZW5kZXIgYXMgX192dWVfcmVuZGVyX18sIHN0YXRpY1JlbmRlckZucyBhcyBfX3Z1ZV9zdGF0aWNfcmVuZGVyX2Zuc19ffSBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvdGVtcGxhdGUtY29tcGlsZXIvaW5kZXg/e1xcXCJpZFxcXCI6XFxcImRhdGEtdi1kNzM3ZWQwOFxcXCIsXFxcImhhc1Njb3BlZFxcXCI6dHJ1ZSxcXFwib3B0aW9uc0lkXFxcIjpcXFwiMFxcXCIsXFxcImJ1YmxlXFxcIjp7XFxcInRyYW5zZm9ybXNcXFwiOnt9fX0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL1BlcnNvbmEudnVlXCJcbi8qIHRlbXBsYXRlIGZ1bmN0aW9uYWwgKi9cbnZhciBfX3Z1ZV90ZW1wbGF0ZV9mdW5jdGlvbmFsX18gPSBmYWxzZVxuLyogc3R5bGVzICovXG52YXIgX192dWVfc3R5bGVzX18gPSBpbmplY3RTdHlsZVxuLyogc2NvcGVJZCAqL1xudmFyIF9fdnVlX3Njb3BlSWRfXyA9IFwiZGF0YS12LWQ3MzdlZDA4XCJcbi8qIG1vZHVsZUlkZW50aWZpZXIgKHNlcnZlciBvbmx5KSAqL1xudmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18gPSBudWxsXG5pbXBvcnQgbm9ybWFsaXplQ29tcG9uZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50LW5vcm1hbGl6ZXJcIlxudmFyIENvbXBvbmVudCA9IG5vcm1hbGl6ZUNvbXBvbmVudChcbiAgX192dWVfc2NyaXB0X18sXG4gIF9fdnVlX3JlbmRlcl9fLFxuICBfX3Z1ZV9zdGF0aWNfcmVuZGVyX2Zuc19fLFxuICBfX3Z1ZV90ZW1wbGF0ZV9mdW5jdGlvbmFsX18sXG4gIF9fdnVlX3N0eWxlc19fLFxuICBfX3Z1ZV9zY29wZUlkX18sXG4gIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX19cbilcbkNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwic3JjXFxcXGNvbXBvbmVudHNcXFxcUGVyc29uYVxcXFxQZXJzb25hLnZ1ZVwiXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7KGZ1bmN0aW9uICgpIHtcbiAgdmFyIGhvdEFQSSA9IHJlcXVpcmUoXCJ2dWUtaG90LXJlbG9hZC1hcGlcIilcbiAgaG90QVBJLmluc3RhbGwocmVxdWlyZShcInZ1ZVwiKSwgZmFsc2UpXG4gIGlmICghaG90QVBJLmNvbXBhdGlibGUpIHJldHVyblxuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghbW9kdWxlLmhvdC5kYXRhKSB7XG4gICAgaG90QVBJLmNyZWF0ZVJlY29yZChcImRhdGEtdi1kNzM3ZWQwOFwiLCBDb21wb25lbnQub3B0aW9ucylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkucmVsb2FkKFwiZGF0YS12LWQ3MzdlZDA4XCIsIENvbXBvbmVudC5vcHRpb25zKVxuICB9XG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbiAoZGF0YSkge1xuICAgIGRpc3Bvc2VkID0gdHJ1ZVxuICB9KVxufSkoKX1cblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50LmV4cG9ydHNcbiIsImltcG9ydCBQZXJzb25hIGZyb20gJy4vUGVyc29uYS52dWUnXHJcblxyXG5leHBvcnQge1xyXG4gIFBlcnNvbmEsXHJcbn1cclxuIiwiXG5leHBvcnQgKiBmcm9tICcuL0JyZWFkY3J1bWInXG5leHBvcnQgKiBmcm9tICcuL0J1dHRvbidcbmV4cG9ydCAqIGZyb20gJy4vUGVyc29uYSdcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n')},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(1)(false);\n// imports\n\n\n// module\nexports.push([module.i, "\\n.ms-Persona[size=\\"14\\"] > .ms-Persona-details[data-v-d737ed08] {\\n  width: calc(100% - 87px);\\n}\\n.ms-Persona[size=\\"9\\"] > .ms-Persona-coin[data-v-d737ed08] {\\n  vertical-align: top;\\n}\\n.ms-Persona[size=\\"9\\"] > .ms-Persona-details[data-v-d737ed08] {\\n  width: calc(100% - 25px);\\n}\\n.ms-Persona[data-v-d737ed08] {\\n  height: initial !important;\\n}\\n.ms-Persona > .ms-Persona-coin[data-v-d737ed08] {\\n    display: inline-block;\\n    vertical-align: middle;\\n    font-size: 10px;\\n}\\n.ms-Persona > .ms-Persona-coin > .ms-Icon[data-v-d737ed08] {\\n      padding-top: 4px;\\n}\\n.ms-Persona > .ms-Persona-coin > .ms-Persona-imageArea[data-v-d737ed08] {\\n      position: relative;\\n      height: 72px;\\n      width: 72px;\\n      text-align: center;\\n}\\n.ms-Persona > .ms-Persona-coin > .ms-Persona-imageArea > .ms-Persona-initials[data-v-d737ed08] {\\n        height: 72px;\\n        line-height: 72px;\\n        font-size: 28px;\\n        color: #ffffff;\\n        background-color: #1e7145;\\n        border-radius: 50%;\\n}\\n.ms-Persona > .ms-Persona-coin > .ms-Persona-imageArea > .ms-Persona-image[data-v-d737ed08] {\\n        border-radius: 50%;\\n        overflow: hidden;\\n}\\n.ms-Persona > .ms-Persona-coin > .ms-Persona-imageArea > .ms-Image[data-v-d737ed08] {\\n        height: 72px;\\n        width: 72px;\\n}\\n.ms-Persona > .ms-Persona-coin > .ms-Persona-imageArea > .ms-Image > .ms-Image-image[data-v-d737ed08] {\\n          position: relative;\\n          width: 100%;\\n          height: auto;\\n}\\n.ms-Persona > .ms-Persona-details[data-v-d737ed08] {\\n    display: inline-block;\\n    vertical-align: middle;\\n    padding-left: 10px;\\n}\\n.ms-Persona > .ms-Persona-details .ms-Persona-primaryText[data-v-d737ed08] {\\n      font-size: 16px;\\n      padding-bottom: 1px;\\n}\\n", ""]);\n\n// exports\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vZmZpY2UtdWktZmFicmljLXZ1ZS8uL3NyYy9jb21wb25lbnRzL1BlcnNvbmEvUGVyc29uYS52dWU/NjQ2NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7QUFHQTtBQUNBLDRGQUE2Riw2QkFBNkIsR0FBRywrREFBK0Qsd0JBQXdCLEdBQUcsa0VBQWtFLDZCQUE2QixHQUFHLGdDQUFnQywrQkFBK0IsR0FBRyxtREFBbUQsNEJBQTRCLDZCQUE2QixzQkFBc0IsR0FBRyw4REFBOEQseUJBQXlCLEdBQUcsMkVBQTJFLDJCQUEyQixxQkFBcUIsb0JBQW9CLDJCQUEyQixHQUFHLGtHQUFrRyx1QkFBdUIsNEJBQTRCLDBCQUEwQix5QkFBeUIsb0NBQW9DLDZCQUE2QixHQUFHLCtGQUErRiw2QkFBNkIsMkJBQTJCLEdBQUcsdUZBQXVGLHVCQUF1QixzQkFBc0IsR0FBRyx5R0FBeUcsK0JBQStCLHdCQUF3Qix5QkFBeUIsR0FBRyxzREFBc0QsNEJBQTRCLDZCQUE2Qix5QkFBeUIsR0FBRyw4RUFBOEUsd0JBQXdCLDRCQUE0QixHQUFHOztBQUVod0QiLCJmaWxlIjoiMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXFxuLm1zLVBlcnNvbmFbc2l6ZT1cXFwiMTRcXFwiXSA+IC5tcy1QZXJzb25hLWRldGFpbHNbZGF0YS12LWQ3MzdlZDA4XSB7XFxuICB3aWR0aDogY2FsYygxMDAlIC0gODdweCk7XFxufVxcbi5tcy1QZXJzb25hW3NpemU9XFxcIjlcXFwiXSA+IC5tcy1QZXJzb25hLWNvaW5bZGF0YS12LWQ3MzdlZDA4XSB7XFxuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xcbn1cXG4ubXMtUGVyc29uYVtzaXplPVxcXCI5XFxcIl0gPiAubXMtUGVyc29uYS1kZXRhaWxzW2RhdGEtdi1kNzM3ZWQwOF0ge1xcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDI1cHgpO1xcbn1cXG4ubXMtUGVyc29uYVtkYXRhLXYtZDczN2VkMDhdIHtcXG4gIGhlaWdodDogaW5pdGlhbCAhaW1wb3J0YW50O1xcbn1cXG4ubXMtUGVyc29uYSA+IC5tcy1QZXJzb25hLWNvaW5bZGF0YS12LWQ3MzdlZDA4XSB7XFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG4gICAgZm9udC1zaXplOiAxMHB4O1xcbn1cXG4ubXMtUGVyc29uYSA+IC5tcy1QZXJzb25hLWNvaW4gPiAubXMtSWNvbltkYXRhLXYtZDczN2VkMDhdIHtcXG4gICAgICBwYWRkaW5nLXRvcDogNHB4O1xcbn1cXG4ubXMtUGVyc29uYSA+IC5tcy1QZXJzb25hLWNvaW4gPiAubXMtUGVyc29uYS1pbWFnZUFyZWFbZGF0YS12LWQ3MzdlZDA4XSB7XFxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICAgIGhlaWdodDogNzJweDtcXG4gICAgICB3aWR0aDogNzJweDtcXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcbi5tcy1QZXJzb25hID4gLm1zLVBlcnNvbmEtY29pbiA+IC5tcy1QZXJzb25hLWltYWdlQXJlYSA+IC5tcy1QZXJzb25hLWluaXRpYWxzW2RhdGEtdi1kNzM3ZWQwOF0ge1xcbiAgICAgICAgaGVpZ2h0OiA3MnB4O1xcbiAgICAgICAgbGluZS1oZWlnaHQ6IDcycHg7XFxuICAgICAgICBmb250LXNpemU6IDI4cHg7XFxuICAgICAgICBjb2xvcjogI2ZmZmZmZjtcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxZTcxNDU7XFxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XFxufVxcbi5tcy1QZXJzb25hID4gLm1zLVBlcnNvbmEtY29pbiA+IC5tcy1QZXJzb25hLWltYWdlQXJlYSA+IC5tcy1QZXJzb25hLWltYWdlW2RhdGEtdi1kNzM3ZWQwOF0ge1xcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcXG59XFxuLm1zLVBlcnNvbmEgPiAubXMtUGVyc29uYS1jb2luID4gLm1zLVBlcnNvbmEtaW1hZ2VBcmVhID4gLm1zLUltYWdlW2RhdGEtdi1kNzM3ZWQwOF0ge1xcbiAgICAgICAgaGVpZ2h0OiA3MnB4O1xcbiAgICAgICAgd2lkdGg6IDcycHg7XFxufVxcbi5tcy1QZXJzb25hID4gLm1zLVBlcnNvbmEtY29pbiA+IC5tcy1QZXJzb25hLWltYWdlQXJlYSA+IC5tcy1JbWFnZSA+IC5tcy1JbWFnZS1pbWFnZVtkYXRhLXYtZDczN2VkMDhdIHtcXG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICAgICAgICB3aWR0aDogMTAwJTtcXG4gICAgICAgICAgaGVpZ2h0OiBhdXRvO1xcbn1cXG4ubXMtUGVyc29uYSA+IC5tcy1QZXJzb25hLWRldGFpbHNbZGF0YS12LWQ3MzdlZDA4XSB7XFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xcbn1cXG4ubXMtUGVyc29uYSA+IC5tcy1QZXJzb25hLWRldGFpbHMgLm1zLVBlcnNvbmEtcHJpbWFyeVRleHRbZGF0YS12LWQ3MzdlZDA4XSB7XFxuICAgICAgZm9udC1zaXplOiAxNnB4O1xcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxcHg7XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n')},function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(3);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(0).default\nvar update = add(\"1b27575b\", content, false, {});\n// Hot Module Replacement\nif(false) {}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vZmZpY2UtdWktZmFicmljLXZ1ZS8uL3NyYy9jb21wb25lbnRzL1BlcnNvbmEvUGVyc29uYS52dWU/MmY4MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBLG1DQUFnTztBQUNoTztBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQztBQUMvQztBQUNBIiwiZmlsZSI6IjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4LmpzP3tcXFwib3B0aW9uc0lkXFxcIjpcXFwiMFxcXCIsXFxcInZ1ZVxcXCI6dHJ1ZSxcXFwiaWRcXFwiOlxcXCJkYXRhLXYtZDczN2VkMDhcXFwiLFxcXCJzY29wZWRcXFwiOnRydWUsXFxcInNvdXJjZU1hcFxcXCI6dHJ1ZX0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9QZXJzb25hLnZ1ZVwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgYWRkID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzQ2xpZW50LmpzXCIpLmRlZmF1bHRcbnZhciB1cGRhdGUgPSBhZGQoXCIxYjI3NTc1YlwiLCBjb250ZW50LCBmYWxzZSwge30pO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuIC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG4gaWYoIWNvbnRlbnQubG9jYWxzKSB7XG4gICBtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4LmpzP3tcXFwib3B0aW9uc0lkXFxcIjpcXFwiMFxcXCIsXFxcInZ1ZVxcXCI6dHJ1ZSxcXFwiaWRcXFwiOlxcXCJkYXRhLXYtZDczN2VkMDhcXFwiLFxcXCJzY29wZWRcXFwiOnRydWUsXFxcInNvdXJjZU1hcFxcXCI6dHJ1ZX0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9QZXJzb25hLnZ1ZVwiLCBmdW5jdGlvbigpIHtcbiAgICAgdmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXIvaW5kZXguanM/e1xcXCJvcHRpb25zSWRcXFwiOlxcXCIwXFxcIixcXFwidnVlXFxcIjp0cnVlLFxcXCJpZFxcXCI6XFxcImRhdGEtdi1kNzM3ZWQwOFxcXCIsXFxcInNjb3BlZFxcXCI6dHJ1ZSxcXFwic291cmNlTWFwXFxcIjp0cnVlfSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL1BlcnNvbmEudnVlXCIpO1xuICAgICBpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcbiAgICAgdXBkYXRlKG5ld0NvbnRlbnQpO1xuICAgfSk7XG4gfVxuIC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3NcbiBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n")},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(1)(false);\n// imports\n\n\n// module\nexports.push([module.i, "\\n.ms-Breadcrumb-root {\\n  margin: 23px 0 1px;\\n}\\n.ms-Breadcrumb-list {\\n  white-space: nowrap;\\n  padding: 0;\\n  margin: 0;\\n  display: flex;\\n  align-items: stretch;\\n}\\n.ms-Breadcrumb-listItem {\\n  list-style-type: none;\\n  margin: 0;\\n  padding: 0;\\n  display: flex;\\n  position: relative;\\n  align-items: center;\\n}\\n.ms-Breadcrumb-listItem:last-of-type .chevron {\\n    display: none;\\n}\\n.ms-Breadcrumb-listItem .ms-Breadcrumb-item,\\n  .ms-Breadcrumb-listItem .ms-Breadcrumb-itemLink {\\n    padding: 0 8px;\\n    max-width: 160px;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n    overflow: hidden;\\n}\\n.ms-Breadcrumb-overflow {\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n}\\n.ms-Breadcrumb-overflowButton {\\n  height: 100%;\\n}\\n.ms-Breadcrumb-overflowButton:hover {\\n    cursor: pointer;\\n}\\n.ms-Breadcrumb-item:hover {\\n  cursor: default;\\n}\\n.ms-Breadcrumb-root .ms-Breadcrumb-itemLink:hover {\\n  color: initial;\\n  cursor: pointer;\\n}\\n.ms-Breadcrumb-root .ms-Breadcrumb-itemLink:active {\\n  outline: transparent;\\n}\\n.ms-Breadcrumb-itemLink,\\n.ms-Breadcrumb-overflowButton {\\n  text-decoration: none;\\n  outline: transparent;\\n}\\n@media screen and (max-width: 800px) {\\n.ms-Breadcrumb-listItem .ms-Breadcrumb-itemLink {\\n    max-width: 116px;\\n}\\n.ms-Breadcrumb-chevron {\\n    font-size: 8px;\\n}\\n.ms-Breadcrumb-overflowButton {\\n    padding: 4px 6px;\\n}\\n}\\n", ""]);\n\n// exports\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vZmZpY2UtdWktZmFicmljLXZ1ZS8uL3NyYy9jb21wb25lbnRzL0JyZWFkY3J1bWIvQnJlYWRjcnVtYi52dWU/NmIyOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7QUFHQTtBQUNBLGdEQUFpRCx1QkFBdUIsR0FBRyx1QkFBdUIsd0JBQXdCLGVBQWUsY0FBYyxrQkFBa0IseUJBQXlCLEdBQUcsMkJBQTJCLDBCQUEwQixjQUFjLGVBQWUsa0JBQWtCLHVCQUF1Qix3QkFBd0IsR0FBRyxpREFBaUQsb0JBQW9CLEdBQUcsbUdBQW1HLHFCQUFxQix1QkFBdUIsMEJBQTBCLDhCQUE4Qix1QkFBdUIsR0FBRywyQkFBMkIsdUJBQXVCLGtCQUFrQix3QkFBd0IsR0FBRyxpQ0FBaUMsaUJBQWlCLEdBQUcsdUNBQXVDLHNCQUFzQixHQUFHLDZCQUE2QixvQkFBb0IsR0FBRyxxREFBcUQsbUJBQW1CLG9CQUFvQixHQUFHLHNEQUFzRCx5QkFBeUIsR0FBRywyREFBMkQsMEJBQTBCLHlCQUF5QixHQUFHLHdDQUF3QyxtREFBbUQsdUJBQXVCLEdBQUcsMEJBQTBCLHFCQUFxQixHQUFHLGlDQUFpQyx1QkFBdUIsR0FBRyxHQUFHOztBQUVuNUMiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXFxuLm1zLUJyZWFkY3J1bWItcm9vdCB7XFxuICBtYXJnaW46IDIzcHggMCAxcHg7XFxufVxcbi5tcy1CcmVhZGNydW1iLWxpc3Qge1xcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG4gIHBhZGRpbmc6IDA7XFxuICBtYXJnaW46IDA7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XFxufVxcbi5tcy1CcmVhZGNydW1iLWxpc3RJdGVtIHtcXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuLm1zLUJyZWFkY3J1bWItbGlzdEl0ZW06bGFzdC1vZi10eXBlIC5jaGV2cm9uIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG59XFxuLm1zLUJyZWFkY3J1bWItbGlzdEl0ZW0gLm1zLUJyZWFkY3J1bWItaXRlbSxcXG4gIC5tcy1CcmVhZGNydW1iLWxpc3RJdGVtIC5tcy1CcmVhZGNydW1iLWl0ZW1MaW5rIHtcXG4gICAgcGFkZGluZzogMCA4cHg7XFxuICAgIG1heC13aWR0aDogMTYwcHg7XFxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG4ubXMtQnJlYWRjcnVtYi1vdmVyZmxvdyB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuLm1zLUJyZWFkY3J1bWItb3ZlcmZsb3dCdXR0b24ge1xcbiAgaGVpZ2h0OiAxMDAlO1xcbn1cXG4ubXMtQnJlYWRjcnVtYi1vdmVyZmxvd0J1dHRvbjpob3ZlciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuLm1zLUJyZWFkY3J1bWItaXRlbTpob3ZlciB7XFxuICBjdXJzb3I6IGRlZmF1bHQ7XFxufVxcbi5tcy1CcmVhZGNydW1iLXJvb3QgLm1zLUJyZWFkY3J1bWItaXRlbUxpbms6aG92ZXIge1xcbiAgY29sb3I6IGluaXRpYWw7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcbi5tcy1CcmVhZGNydW1iLXJvb3QgLm1zLUJyZWFkY3J1bWItaXRlbUxpbms6YWN0aXZlIHtcXG4gIG91dGxpbmU6IHRyYW5zcGFyZW50O1xcbn1cXG4ubXMtQnJlYWRjcnVtYi1pdGVtTGluayxcXG4ubXMtQnJlYWRjcnVtYi1vdmVyZmxvd0J1dHRvbiB7XFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICBvdXRsaW5lOiB0cmFuc3BhcmVudDtcXG59XFxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogODAwcHgpIHtcXG4ubXMtQnJlYWRjcnVtYi1saXN0SXRlbSAubXMtQnJlYWRjcnVtYi1pdGVtTGluayB7XFxuICAgIG1heC13aWR0aDogMTE2cHg7XFxufVxcbi5tcy1CcmVhZGNydW1iLWNoZXZyb24ge1xcbiAgICBmb250LXNpemU6IDhweDtcXG59XFxuLm1zLUJyZWFkY3J1bWItb3ZlcmZsb3dCdXR0b24ge1xcbiAgICBwYWRkaW5nOiA0cHggNnB4O1xcbn1cXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n')},function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(5);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(0).default\nvar update = add(\"5662c656\", content, false, {});\n// Hot Module Replacement\nif(false) {}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vZmZpY2UtdWktZmFicmljLXZ1ZS8uL3NyYy9jb21wb25lbnRzL0JyZWFkY3J1bWIvQnJlYWRjcnVtYi52dWU/ODA2ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBLG1DQUFzTTtBQUN0TTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQztBQUMvQztBQUNBIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4LmpzP3tcXFwib3B0aW9uc0lkXFxcIjpcXFwiMFxcXCIsXFxcInZ1ZVxcXCI6dHJ1ZSxcXFwic2NvcGVkXFxcIjpmYWxzZSxcXFwic291cmNlTWFwXFxcIjp0cnVlfSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL0JyZWFkY3J1bWIudnVlXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXNDbGllbnQuanNcIikuZGVmYXVsdFxudmFyIHVwZGF0ZSA9IGFkZChcIjU2NjJjNjU2XCIsIGNvbnRlbnQsIGZhbHNlLCB7fSk7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG4gLy8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3NcbiBpZighY29udGVudC5sb2NhbHMpIHtcbiAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXIvaW5kZXguanM/e1xcXCJvcHRpb25zSWRcXFwiOlxcXCIwXFxcIixcXFwidnVlXFxcIjp0cnVlLFxcXCJzY29wZWRcXFwiOmZhbHNlLFxcXCJzb3VyY2VNYXBcXFwiOnRydWV9IS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXN0eWxlcyZpbmRleD0wIS4vQnJlYWRjcnVtYi52dWVcIiwgZnVuY3Rpb24oKSB7XG4gICAgIHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4LmpzP3tcXFwib3B0aW9uc0lkXFxcIjpcXFwiMFxcXCIsXFxcInZ1ZVxcXCI6dHJ1ZSxcXFwic2NvcGVkXFxcIjpmYWxzZSxcXFwic291cmNlTWFwXFxcIjp0cnVlfSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL0JyZWFkY3J1bWIudnVlXCIpO1xuICAgICBpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcbiAgICAgdXBkYXRlKG5ld0NvbnRlbnQpO1xuICAgfSk7XG4gfVxuIC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3NcbiBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n")}])});